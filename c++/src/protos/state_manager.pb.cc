// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state_manager.proto

#include "state_manager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Frame_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {
class RecordFramesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordFramesRequest> _instance;
} _RecordFramesRequest_default_instance_;
class RecordFramesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordFramesResponse> _instance;
} _RecordFramesResponse_default_instance_;
}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github
static void InitDefaultsRecordFramesRequest_state_5fmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_RecordFramesRequest_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::RecordFramesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::RecordFramesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RecordFramesRequest_state_5fmanager_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRecordFramesRequest_state_5fmanager_2eproto}, {
      &scc_info_Frame_common_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsRecordFramesResponse_state_5fmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_RecordFramesResponse_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::RecordFramesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::RecordFramesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecordFramesResponse_state_5fmanager_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecordFramesResponse_state_5fmanager_2eproto}, {}};

void InitDefaults_state_5fmanager_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_RecordFramesRequest_state_5fmanager_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecordFramesResponse_state_5fmanager_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_state_5fmanager_2eproto[2];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_state_5fmanager_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_state_5fmanager_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_state_5fmanager_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::RecordFramesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::RecordFramesRequest, data_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::RecordFramesRequest, created_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::RecordFramesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::github::com::pyrus::platform::protos::RecordFramesRequest)},
  { 7, -1, sizeof(::github::com::pyrus::platform::protos::RecordFramesResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_RecordFramesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_RecordFramesResponse_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_state_5fmanager_2eproto = {
  {}, AddDescriptors_state_5fmanager_2eproto, "state_manager.proto", schemas,
  file_default_instances, TableStruct_state_5fmanager_2eproto::offsets,
  file_level_metadata_state_5fmanager_2eproto, 2, file_level_enum_descriptors_state_5fmanager_2eproto, file_level_service_descriptors_state_5fmanager_2eproto,
};

const char descriptor_table_protodef_state_5fmanager_2eproto[] =
  "\n\023state_manager.proto\022 github.com.pyrus."
  "platform.protos\032\014common.proto\032\037google/pr"
  "otobuf/timestamp.proto\"y\n\023RecordFramesRe"
  "quest\0225\n\004data\030\001 \001(\0132\'.github.com.pyrus.p"
  "latform.protos.Frame\022+\n\007created\030\002 \001(\0132\032."
  "google.protobuf.Timestamp\"\026\n\024RecordFrame"
  "sResponse2\226\001\n\023StateManagerService\022\177\n\014Rec"
  "ordFrames\0225.github.com.pyrus.platform.pr"
  "otos.RecordFramesRequest\0326.github.com.py"
  "rus.platform.protos.RecordFramesResponse"
  "(\001B\"Z\010platform\252\002\025Pyrus.Platform.Protosb\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_state_5fmanager_2eproto = {
  false, InitDefaults_state_5fmanager_2eproto, 
  descriptor_table_protodef_state_5fmanager_2eproto,
  "state_manager.proto", &assign_descriptors_table_state_5fmanager_2eproto, 446,
};

void AddDescriptors_state_5fmanager_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_common_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_state_5fmanager_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_state_5fmanager_2eproto = []() { AddDescriptors_state_5fmanager_2eproto(); return true; }();
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {

// ===================================================================

void RecordFramesRequest::InitAsDefaultInstance() {
  ::github::com::pyrus::platform::protos::_RecordFramesRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::github::com::pyrus::platform::protos::Frame*>(
      ::github::com::pyrus::platform::protos::Frame::internal_default_instance());
  ::github::com::pyrus::platform::protos::_RecordFramesRequest_default_instance_._instance.get_mutable()->created_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class RecordFramesRequest::HasBitSetters {
 public:
  static const ::github::com::pyrus::platform::protos::Frame& data(const RecordFramesRequest* msg);
  static const ::google::protobuf::Timestamp& created(const RecordFramesRequest* msg);
};

const ::github::com::pyrus::platform::protos::Frame&
RecordFramesRequest::HasBitSetters::data(const RecordFramesRequest* msg) {
  return *msg->data_;
}
const ::google::protobuf::Timestamp&
RecordFramesRequest::HasBitSetters::created(const RecordFramesRequest* msg) {
  return *msg->created_;
}
void RecordFramesRequest::clear_data() {
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
void RecordFramesRequest::clear_created() {
  if (GetArenaNoVirtual() == nullptr && created_ != nullptr) {
    delete created_;
  }
  created_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordFramesRequest::kDataFieldNumber;
const int RecordFramesRequest::kCreatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordFramesRequest::RecordFramesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.RecordFramesRequest)
}
RecordFramesRequest::RecordFramesRequest(const RecordFramesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::github::com::pyrus::platform::protos::Frame(*from.data_);
  } else {
    data_ = nullptr;
  }
  if (from.has_created()) {
    created_ = new ::google::protobuf::Timestamp(*from.created_);
  } else {
    created_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.RecordFramesRequest)
}

void RecordFramesRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RecordFramesRequest_state_5fmanager_2eproto.base);
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&created_) -
      reinterpret_cast<char*>(&data_)) + sizeof(created_));
}

RecordFramesRequest::~RecordFramesRequest() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.RecordFramesRequest)
  SharedDtor();
}

void RecordFramesRequest::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
  if (this != internal_default_instance()) delete created_;
}

void RecordFramesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecordFramesRequest& RecordFramesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RecordFramesRequest_state_5fmanager_2eproto.base);
  return *internal_default_instance();
}


void RecordFramesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && created_ != nullptr) {
    delete created_;
  }
  created_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecordFramesRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RecordFramesRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .github.com.pyrus.platform.protos.Frame data = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::github::com::pyrus::platform::protos::Frame::_InternalParse;
        object = msg->mutable_data();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp created = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_created();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecordFramesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .github.com.pyrus.platform.protos.Frame data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp created = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.RecordFramesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.RecordFramesRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecordFramesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Frame data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::data(this), output);
  }

  // .google.protobuf.Timestamp created = 2;
  if (this->has_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::created(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.RecordFramesRequest)
}

::google::protobuf::uint8* RecordFramesRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Frame data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::data(this), target);
  }

  // .google.protobuf.Timestamp created = 2;
  if (this->has_created()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::created(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.RecordFramesRequest)
  return target;
}

size_t RecordFramesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Frame data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // .google.protobuf.Timestamp created = 2;
  if (this->has_created()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *created_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecordFramesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordFramesRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RecordFramesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.RecordFramesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.RecordFramesRequest)
    MergeFrom(*source);
  }
}

void RecordFramesRequest::MergeFrom(const RecordFramesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::github::com::pyrus::platform::protos::Frame::MergeFrom(from.data());
  }
  if (from.has_created()) {
    mutable_created()->::google::protobuf::Timestamp::MergeFrom(from.created());
  }
}

void RecordFramesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordFramesRequest::CopyFrom(const RecordFramesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.RecordFramesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordFramesRequest::IsInitialized() const {
  return true;
}

void RecordFramesRequest::Swap(RecordFramesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordFramesRequest::InternalSwap(RecordFramesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(data_, other->data_);
  swap(created_, other->created_);
}

::google::protobuf::Metadata RecordFramesRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_state_5fmanager_2eproto);
  return ::file_level_metadata_state_5fmanager_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RecordFramesResponse::InitAsDefaultInstance() {
}
class RecordFramesResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordFramesResponse::RecordFramesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.RecordFramesResponse)
}
RecordFramesResponse::RecordFramesResponse(const RecordFramesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.RecordFramesResponse)
}

void RecordFramesResponse::SharedCtor() {
}

RecordFramesResponse::~RecordFramesResponse() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.RecordFramesResponse)
  SharedDtor();
}

void RecordFramesResponse::SharedDtor() {
}

void RecordFramesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecordFramesResponse& RecordFramesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RecordFramesResponse_state_5fmanager_2eproto.base);
  return *internal_default_instance();
}


void RecordFramesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RecordFramesResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RecordFramesResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RecordFramesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.RecordFramesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.RecordFramesResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RecordFramesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.RecordFramesResponse)
}

::google::protobuf::uint8* RecordFramesResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.RecordFramesResponse)
  return target;
}

size_t RecordFramesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecordFramesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordFramesResponse* source =
      ::google::protobuf::DynamicCastToGenerated<RecordFramesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.RecordFramesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.RecordFramesResponse)
    MergeFrom(*source);
  }
}

void RecordFramesResponse::MergeFrom(const RecordFramesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RecordFramesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordFramesResponse::CopyFrom(const RecordFramesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.RecordFramesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordFramesResponse::IsInitialized() const {
  return true;
}

void RecordFramesResponse::Swap(RecordFramesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordFramesResponse::InternalSwap(RecordFramesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecordFramesResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_state_5fmanager_2eproto);
  return ::file_level_metadata_state_5fmanager_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::RecordFramesRequest* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::RecordFramesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::RecordFramesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::RecordFramesResponse* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::RecordFramesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::RecordFramesResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
