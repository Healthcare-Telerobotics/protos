// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: session_service.proto

#ifndef PROTOBUF_INCLUDED_session_5fservice_2eproto
#define PROTOBUF_INCLUDED_session_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_session_5fservice_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_session_5fservice_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_session_5fservice_2eproto();
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {
class CreateSessionRequest;
class CreateSessionRequestDefaultTypeInternal;
extern CreateSessionRequestDefaultTypeInternal _CreateSessionRequest_default_instance_;
class CreateSessionResponse;
class CreateSessionResponseDefaultTypeInternal;
extern CreateSessionResponseDefaultTypeInternal _CreateSessionResponse_default_instance_;
class DeleteSessionRequest;
class DeleteSessionRequestDefaultTypeInternal;
extern DeleteSessionRequestDefaultTypeInternal _DeleteSessionRequest_default_instance_;
class DeleteSessionResponse;
class DeleteSessionResponseDefaultTypeInternal;
extern DeleteSessionResponseDefaultTypeInternal _DeleteSessionResponse_default_instance_;
class GetSessionRequest;
class GetSessionRequestDefaultTypeInternal;
extern GetSessionRequestDefaultTypeInternal _GetSessionRequest_default_instance_;
class GetSessionResponse;
class GetSessionResponseDefaultTypeInternal;
extern GetSessionResponseDefaultTypeInternal _GetSessionResponse_default_instance_;
class JoinSessionRequest;
class JoinSessionRequestDefaultTypeInternal;
extern JoinSessionRequestDefaultTypeInternal _JoinSessionRequest_default_instance_;
class JoinSessionResponse;
class JoinSessionResponseDefaultTypeInternal;
extern JoinSessionResponseDefaultTypeInternal _JoinSessionResponse_default_instance_;
class ListSessionsRequest;
class ListSessionsRequestDefaultTypeInternal;
extern ListSessionsRequestDefaultTypeInternal _ListSessionsRequest_default_instance_;
class ListSessionsResponse;
class ListSessionsResponseDefaultTypeInternal;
extern ListSessionsResponseDefaultTypeInternal _ListSessionsResponse_default_instance_;
class ListWaitingSessionRequest;
class ListWaitingSessionRequestDefaultTypeInternal;
extern ListWaitingSessionRequestDefaultTypeInternal _ListWaitingSessionRequest_default_instance_;
class ListWaitingSessionResponse;
class ListWaitingSessionResponseDefaultTypeInternal;
extern ListWaitingSessionResponseDefaultTypeInternal _ListWaitingSessionResponse_default_instance_;
class Session;
class SessionDefaultTypeInternal;
extern SessionDefaultTypeInternal _Session_default_instance_;
class SessionDevice;
class SessionDeviceDefaultTypeInternal;
extern SessionDeviceDefaultTypeInternal _SessionDevice_default_instance_;
class WaitForSessionRequest;
class WaitForSessionRequestDefaultTypeInternal;
extern WaitForSessionRequestDefaultTypeInternal _WaitForSessionRequest_default_instance_;
class WaitForSessionResponse;
class WaitForSessionResponseDefaultTypeInternal;
extern WaitForSessionResponseDefaultTypeInternal _WaitForSessionResponse_default_instance_;
}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github
namespace google {
namespace protobuf {
template<> ::github::com::pyrus::platform::protos::CreateSessionRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::CreateSessionRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::CreateSessionResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::CreateSessionResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::DeleteSessionRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::DeleteSessionRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::DeleteSessionResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::DeleteSessionResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::GetSessionRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::GetSessionRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::GetSessionResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::GetSessionResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::JoinSessionRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::JoinSessionRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::JoinSessionResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::JoinSessionResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::ListSessionsRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::ListSessionsRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::ListSessionsResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::ListSessionsResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::ListWaitingSessionRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::ListWaitingSessionRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::ListWaitingSessionResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::ListWaitingSessionResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::Session* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::Session>(Arena*);
template<> ::github::com::pyrus::platform::protos::SessionDevice* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::SessionDevice>(Arena*);
template<> ::github::com::pyrus::platform::protos::WaitForSessionRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::WaitForSessionRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::WaitForSessionResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::WaitForSessionResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {

// ===================================================================

class CreateSessionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.CreateSessionRequest) */ {
 public:
  CreateSessionRequest();
  virtual ~CreateSessionRequest();

  CreateSessionRequest(const CreateSessionRequest& from);

  inline CreateSessionRequest& operator=(const CreateSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSessionRequest(CreateSessionRequest&& from) noexcept
    : CreateSessionRequest() {
    *this = ::std::move(from);
  }

  inline CreateSessionRequest& operator=(CreateSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSessionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSessionRequest*>(
               &_CreateSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreateSessionRequest* other);
  friend void swap(CreateSessionRequest& a, CreateSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSessionRequest* New() const final {
    return CreateMaybeMessage<CreateSessionRequest>(nullptr);
  }

  CreateSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateSessionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateSessionRequest& from);
  void MergeFrom(const CreateSessionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 deviceIDs = 2;
  int deviceids_size() const;
  void clear_deviceids();
  static const int kDeviceIDsFieldNumber = 2;
  ::google::protobuf::uint64 deviceids(int index) const;
  void set_deviceids(int index, ::google::protobuf::uint64 value);
  void add_deviceids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      deviceids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_deviceids();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.CreateSessionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > deviceids_;
  mutable std::atomic<int> _deviceids_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CreateSessionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.CreateSessionResponse) */ {
 public:
  CreateSessionResponse();
  virtual ~CreateSessionResponse();

  CreateSessionResponse(const CreateSessionResponse& from);

  inline CreateSessionResponse& operator=(const CreateSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSessionResponse(CreateSessionResponse&& from) noexcept
    : CreateSessionResponse() {
    *this = ::std::move(from);
  }

  inline CreateSessionResponse& operator=(CreateSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSessionResponse*>(
               &_CreateSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreateSessionResponse* other);
  friend void swap(CreateSessionResponse& a, CreateSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSessionResponse* New() const final {
    return CreateMaybeMessage<CreateSessionResponse>(nullptr);
  }

  CreateSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateSessionResponse& from);
  void MergeFrom(const CreateSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Session session = 1;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Session& session() const;
  ::github::com::pyrus::platform::protos::Session* release_session();
  ::github::com::pyrus::platform::protos::Session* mutable_session();
  void set_allocated_session(::github::com::pyrus::platform::protos::Session* session);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.CreateSessionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Session* session_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetSessionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.GetSessionRequest) */ {
 public:
  GetSessionRequest();
  virtual ~GetSessionRequest();

  GetSessionRequest(const GetSessionRequest& from);

  inline GetSessionRequest& operator=(const GetSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSessionRequest(GetSessionRequest&& from) noexcept
    : GetSessionRequest() {
    *this = ::std::move(from);
  }

  inline GetSessionRequest& operator=(GetSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSessionRequest* internal_default_instance() {
    return reinterpret_cast<const GetSessionRequest*>(
               &_GetSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetSessionRequest* other);
  friend void swap(GetSessionRequest& a, GetSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSessionRequest* New() const final {
    return CreateMaybeMessage<GetSessionRequest>(nullptr);
  }

  GetSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSessionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSessionRequest& from);
  void MergeFrom(const GetSessionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 sessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.GetSessionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetSessionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.GetSessionResponse) */ {
 public:
  GetSessionResponse();
  virtual ~GetSessionResponse();

  GetSessionResponse(const GetSessionResponse& from);

  inline GetSessionResponse& operator=(const GetSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSessionResponse(GetSessionResponse&& from) noexcept
    : GetSessionResponse() {
    *this = ::std::move(from);
  }

  inline GetSessionResponse& operator=(GetSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSessionResponse* internal_default_instance() {
    return reinterpret_cast<const GetSessionResponse*>(
               &_GetSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetSessionResponse* other);
  friend void swap(GetSessionResponse& a, GetSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSessionResponse* New() const final {
    return CreateMaybeMessage<GetSessionResponse>(nullptr);
  }

  GetSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetSessionResponse& from);
  void MergeFrom(const GetSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Session session = 1;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Session& session() const;
  ::github::com::pyrus::platform::protos::Session* release_session();
  ::github::com::pyrus::platform::protos::Session* mutable_session();
  void set_allocated_session(::github::com::pyrus::platform::protos::Session* session);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.GetSessionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Session* session_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DeleteSessionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.DeleteSessionRequest) */ {
 public:
  DeleteSessionRequest();
  virtual ~DeleteSessionRequest();

  DeleteSessionRequest(const DeleteSessionRequest& from);

  inline DeleteSessionRequest& operator=(const DeleteSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteSessionRequest(DeleteSessionRequest&& from) noexcept
    : DeleteSessionRequest() {
    *this = ::std::move(from);
  }

  inline DeleteSessionRequest& operator=(DeleteSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSessionRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteSessionRequest*>(
               &_DeleteSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(DeleteSessionRequest* other);
  friend void swap(DeleteSessionRequest& a, DeleteSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteSessionRequest* New() const final {
    return CreateMaybeMessage<DeleteSessionRequest>(nullptr);
  }

  DeleteSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSessionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteSessionRequest& from);
  void MergeFrom(const DeleteSessionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 sessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.DeleteSessionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ListSessionsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.ListSessionsRequest) */ {
 public:
  ListSessionsRequest();
  virtual ~ListSessionsRequest();

  ListSessionsRequest(const ListSessionsRequest& from);

  inline ListSessionsRequest& operator=(const ListSessionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSessionsRequest(ListSessionsRequest&& from) noexcept
    : ListSessionsRequest() {
    *this = ::std::move(from);
  }

  inline ListSessionsRequest& operator=(ListSessionsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListSessionsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSessionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListSessionsRequest*>(
               &_ListSessionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(ListSessionsRequest* other);
  friend void swap(ListSessionsRequest& a, ListSessionsRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSessionsRequest* New() const final {
    return CreateMaybeMessage<ListSessionsRequest>(nullptr);
  }

  ListSessionsRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSessionsRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSessionsRequest& from);
  void MergeFrom(const ListSessionsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSessionsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.ListSessionsRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ListSessionsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.ListSessionsResponse) */ {
 public:
  ListSessionsResponse();
  virtual ~ListSessionsResponse();

  ListSessionsResponse(const ListSessionsResponse& from);

  inline ListSessionsResponse& operator=(const ListSessionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListSessionsResponse(ListSessionsResponse&& from) noexcept
    : ListSessionsResponse() {
    *this = ::std::move(from);
  }

  inline ListSessionsResponse& operator=(ListSessionsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListSessionsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListSessionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListSessionsResponse*>(
               &_ListSessionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ListSessionsResponse* other);
  friend void swap(ListSessionsResponse& a, ListSessionsResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListSessionsResponse* New() const final {
    return CreateMaybeMessage<ListSessionsResponse>(nullptr);
  }

  ListSessionsResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListSessionsResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListSessionsResponse& from);
  void MergeFrom(const ListSessionsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListSessionsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Session session = 1;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Session& session() const;
  ::github::com::pyrus::platform::protos::Session* release_session();
  ::github::com::pyrus::platform::protos::Session* mutable_session();
  void set_allocated_session(::github::com::pyrus::platform::protos::Session* session);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.ListSessionsResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Session* session_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DeleteSessionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.DeleteSessionResponse) */ {
 public:
  DeleteSessionResponse();
  virtual ~DeleteSessionResponse();

  DeleteSessionResponse(const DeleteSessionResponse& from);

  inline DeleteSessionResponse& operator=(const DeleteSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteSessionResponse(DeleteSessionResponse&& from) noexcept
    : DeleteSessionResponse() {
    *this = ::std::move(from);
  }

  inline DeleteSessionResponse& operator=(DeleteSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteSessionResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteSessionResponse*>(
               &_DeleteSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(DeleteSessionResponse* other);
  friend void swap(DeleteSessionResponse& a, DeleteSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteSessionResponse* New() const final {
    return CreateMaybeMessage<DeleteSessionResponse>(nullptr);
  }

  DeleteSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteSessionResponse& from);
  void MergeFrom(const DeleteSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.DeleteSessionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class WaitForSessionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.WaitForSessionRequest) */ {
 public:
  WaitForSessionRequest();
  virtual ~WaitForSessionRequest();

  WaitForSessionRequest(const WaitForSessionRequest& from);

  inline WaitForSessionRequest& operator=(const WaitForSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WaitForSessionRequest(WaitForSessionRequest&& from) noexcept
    : WaitForSessionRequest() {
    *this = ::std::move(from);
  }

  inline WaitForSessionRequest& operator=(WaitForSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WaitForSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WaitForSessionRequest* internal_default_instance() {
    return reinterpret_cast<const WaitForSessionRequest*>(
               &_WaitForSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(WaitForSessionRequest* other);
  friend void swap(WaitForSessionRequest& a, WaitForSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WaitForSessionRequest* New() const final {
    return CreateMaybeMessage<WaitForSessionRequest>(nullptr);
  }

  WaitForSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WaitForSessionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WaitForSessionRequest& from);
  void MergeFrom(const WaitForSessionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WaitForSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 deviceID = 1;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  ::google::protobuf::uint64 deviceid() const;
  void set_deviceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.WaitForSessionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 deviceid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class WaitForSessionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.WaitForSessionResponse) */ {
 public:
  WaitForSessionResponse();
  virtual ~WaitForSessionResponse();

  WaitForSessionResponse(const WaitForSessionResponse& from);

  inline WaitForSessionResponse& operator=(const WaitForSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WaitForSessionResponse(WaitForSessionResponse&& from) noexcept
    : WaitForSessionResponse() {
    *this = ::std::move(from);
  }

  inline WaitForSessionResponse& operator=(WaitForSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WaitForSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WaitForSessionResponse* internal_default_instance() {
    return reinterpret_cast<const WaitForSessionResponse*>(
               &_WaitForSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(WaitForSessionResponse* other);
  friend void swap(WaitForSessionResponse& a, WaitForSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WaitForSessionResponse* New() const final {
    return CreateMaybeMessage<WaitForSessionResponse>(nullptr);
  }

  WaitForSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WaitForSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WaitForSessionResponse& from);
  void MergeFrom(const WaitForSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WaitForSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 sessionID = 1;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 1;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.WaitForSessionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ListWaitingSessionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.ListWaitingSessionRequest) */ {
 public:
  ListWaitingSessionRequest();
  virtual ~ListWaitingSessionRequest();

  ListWaitingSessionRequest(const ListWaitingSessionRequest& from);

  inline ListWaitingSessionRequest& operator=(const ListWaitingSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListWaitingSessionRequest(ListWaitingSessionRequest&& from) noexcept
    : ListWaitingSessionRequest() {
    *this = ::std::move(from);
  }

  inline ListWaitingSessionRequest& operator=(ListWaitingSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListWaitingSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListWaitingSessionRequest* internal_default_instance() {
    return reinterpret_cast<const ListWaitingSessionRequest*>(
               &_ListWaitingSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ListWaitingSessionRequest* other);
  friend void swap(ListWaitingSessionRequest& a, ListWaitingSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListWaitingSessionRequest* New() const final {
    return CreateMaybeMessage<ListWaitingSessionRequest>(nullptr);
  }

  ListWaitingSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListWaitingSessionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListWaitingSessionRequest& from);
  void MergeFrom(const ListWaitingSessionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListWaitingSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ListWaitingSessionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.ListWaitingSessionResponse) */ {
 public:
  ListWaitingSessionResponse();
  virtual ~ListWaitingSessionResponse();

  ListWaitingSessionResponse(const ListWaitingSessionResponse& from);

  inline ListWaitingSessionResponse& operator=(const ListWaitingSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListWaitingSessionResponse(ListWaitingSessionResponse&& from) noexcept
    : ListWaitingSessionResponse() {
    *this = ::std::move(from);
  }

  inline ListWaitingSessionResponse& operator=(ListWaitingSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListWaitingSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListWaitingSessionResponse* internal_default_instance() {
    return reinterpret_cast<const ListWaitingSessionResponse*>(
               &_ListWaitingSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(ListWaitingSessionResponse* other);
  friend void swap(ListWaitingSessionResponse& a, ListWaitingSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListWaitingSessionResponse* New() const final {
    return CreateMaybeMessage<ListWaitingSessionResponse>(nullptr);
  }

  ListWaitingSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListWaitingSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListWaitingSessionResponse& from);
  void MergeFrom(const ListWaitingSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListWaitingSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Device device = 1;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Device& device() const;
  ::github::com::pyrus::platform::protos::Device* release_device();
  ::github::com::pyrus::platform::protos::Device* mutable_device();
  void set_allocated_device(::github::com::pyrus::platform::protos::Device* device);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Device* device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class JoinSessionRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.JoinSessionRequest) */ {
 public:
  JoinSessionRequest();
  virtual ~JoinSessionRequest();

  JoinSessionRequest(const JoinSessionRequest& from);

  inline JoinSessionRequest& operator=(const JoinSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinSessionRequest(JoinSessionRequest&& from) noexcept
    : JoinSessionRequest() {
    *this = ::std::move(from);
  }

  inline JoinSessionRequest& operator=(JoinSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const JoinSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinSessionRequest* internal_default_instance() {
    return reinterpret_cast<const JoinSessionRequest*>(
               &_JoinSessionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(JoinSessionRequest* other);
  friend void swap(JoinSessionRequest& a, JoinSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinSessionRequest* New() const final {
    return CreateMaybeMessage<JoinSessionRequest>(nullptr);
  }

  JoinSessionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JoinSessionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JoinSessionRequest& from);
  void MergeFrom(const JoinSessionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 deviceID = 1;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  ::google::protobuf::uint64 deviceid() const;
  void set_deviceid(::google::protobuf::uint64 value);

  // uint64 sessionID = 2;
  void clear_sessionid();
  static const int kSessionIDFieldNumber = 2;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.JoinSessionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 deviceid_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class JoinSessionResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.JoinSessionResponse) */ {
 public:
  JoinSessionResponse();
  virtual ~JoinSessionResponse();

  JoinSessionResponse(const JoinSessionResponse& from);

  inline JoinSessionResponse& operator=(const JoinSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinSessionResponse(JoinSessionResponse&& from) noexcept
    : JoinSessionResponse() {
    *this = ::std::move(from);
  }

  inline JoinSessionResponse& operator=(JoinSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const JoinSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JoinSessionResponse* internal_default_instance() {
    return reinterpret_cast<const JoinSessionResponse*>(
               &_JoinSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(JoinSessionResponse* other);
  friend void swap(JoinSessionResponse& a, JoinSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinSessionResponse* New() const final {
    return CreateMaybeMessage<JoinSessionResponse>(nullptr);
  }

  JoinSessionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JoinSessionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JoinSessionResponse& from);
  void MergeFrom(const JoinSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JoinSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.SessionDevice sessionDevice = 1;
  bool has_sessiondevice() const;
  void clear_sessiondevice();
  static const int kSessionDeviceFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::SessionDevice& sessiondevice() const;
  ::github::com::pyrus::platform::protos::SessionDevice* release_sessiondevice();
  ::github::com::pyrus::platform::protos::SessionDevice* mutable_sessiondevice();
  void set_allocated_sessiondevice(::github::com::pyrus::platform::protos::SessionDevice* sessiondevice);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.JoinSessionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::SessionDevice* sessiondevice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class Session final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.Session) */ {
 public:
  Session();
  virtual ~Session();

  Session(const Session& from);

  inline Session& operator=(const Session& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Session(Session&& from) noexcept
    : Session() {
    *this = ::std::move(from);
  }

  inline Session& operator=(Session&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Session& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Session* internal_default_instance() {
    return reinterpret_cast<const Session*>(
               &_Session_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(Session* other);
  friend void swap(Session& a, Session& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Session* New() const final {
    return CreateMaybeMessage<Session>(nullptr);
  }

  Session* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Session>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Session& from);
  void MergeFrom(const Session& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Session* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .github.com.pyrus.platform.protos.SessionDevice devices = 3;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 3;
  ::github::com::pyrus::platform::protos::SessionDevice* mutable_devices(int index);
  ::google::protobuf::RepeatedPtrField< ::github::com::pyrus::platform::protos::SessionDevice >*
      mutable_devices();
  const ::github::com::pyrus::platform::protos::SessionDevice& devices(int index) const;
  ::github::com::pyrus::platform::protos::SessionDevice* add_devices();
  const ::google::protobuf::RepeatedPtrField< ::github::com::pyrus::platform::protos::SessionDevice >&
      devices() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .google.protobuf.Timestamp created = 4;
  bool has_created() const;
  void clear_created();
  static const int kCreatedFieldNumber = 4;
  const ::google::protobuf::Timestamp& created() const;
  ::google::protobuf::Timestamp* release_created();
  ::google::protobuf::Timestamp* mutable_created();
  void set_allocated_created(::google::protobuf::Timestamp* created);

  // .google.protobuf.Timestamp closed = 5;
  bool has_closed() const;
  void clear_closed();
  static const int kClosedFieldNumber = 5;
  const ::google::protobuf::Timestamp& closed() const;
  ::google::protobuf::Timestamp* release_closed();
  ::google::protobuf::Timestamp* mutable_closed();
  void set_allocated_closed(::google::protobuf::Timestamp* closed);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.Session)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::github::com::pyrus::platform::protos::SessionDevice > devices_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::Timestamp* created_;
  ::google::protobuf::Timestamp* closed_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// -------------------------------------------------------------------

class SessionDevice final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.SessionDevice) */ {
 public:
  SessionDevice();
  virtual ~SessionDevice();

  SessionDevice(const SessionDevice& from);

  inline SessionDevice& operator=(const SessionDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SessionDevice(SessionDevice&& from) noexcept
    : SessionDevice() {
    *this = ::std::move(from);
  }

  inline SessionDevice& operator=(SessionDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SessionDevice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SessionDevice* internal_default_instance() {
    return reinterpret_cast<const SessionDevice*>(
               &_SessionDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(SessionDevice* other);
  friend void swap(SessionDevice& a, SessionDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SessionDevice* New() const final {
    return CreateMaybeMessage<SessionDevice>(nullptr);
  }

  SessionDevice* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SessionDevice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SessionDevice& from);
  void MergeFrom(const SessionDevice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SessionDevice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .github.com.pyrus.platform.protos.DataType produces = 3;
  int produces_size() const;
  void clear_produces();
  static const int kProducesFieldNumber = 3;
  ::github::com::pyrus::platform::protos::DataType produces(int index) const;
  void set_produces(int index, ::github::com::pyrus::platform::protos::DataType value);
  void add_produces(::github::com::pyrus::platform::protos::DataType value);
  const ::google::protobuf::RepeatedField<int>& produces() const;
  ::google::protobuf::RepeatedField<int>* mutable_produces();

  // repeated .github.com.pyrus.platform.protos.DataType consumes = 4;
  int consumes_size() const;
  void clear_consumes();
  static const int kConsumesFieldNumber = 4;
  ::github::com::pyrus::platform::protos::DataType consumes(int index) const;
  void set_consumes(int index, ::github::com::pyrus::platform::protos::DataType value);
  void add_consumes(::github::com::pyrus::platform::protos::DataType value);
  const ::google::protobuf::RepeatedField<int>& consumes() const;
  ::google::protobuf::RepeatedField<int>* mutable_consumes();

  // .github.com.pyrus.platform.protos.Device device = 2;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 2;
  const ::github::com::pyrus::platform::protos::Device& device() const;
  ::github::com::pyrus::platform::protos::Device* release_device();
  ::github::com::pyrus::platform::protos::Device* mutable_device();
  void set_allocated_device(::github::com::pyrus::platform::protos::Device* device);

  // bool connected = 1;
  void clear_connected();
  static const int kConnectedFieldNumber = 1;
  bool connected() const;
  void set_connected(bool value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.SessionDevice)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> produces_;
  mutable std::atomic<int> _produces_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> consumes_;
  mutable std::atomic<int> _consumes_cached_byte_size_;
  ::github::com::pyrus::platform::protos::Device* device_;
  bool connected_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_session_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateSessionRequest

// string name = 1;
inline void CreateSessionRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSessionRequest::name() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.CreateSessionRequest.name)
  return name_.GetNoArena();
}
inline void CreateSessionRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.CreateSessionRequest.name)
}
#if LANG_CXX11
inline void CreateSessionRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:github.com.pyrus.platform.protos.CreateSessionRequest.name)
}
#endif
inline void CreateSessionRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:github.com.pyrus.platform.protos.CreateSessionRequest.name)
}
inline void CreateSessionRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:github.com.pyrus.platform.protos.CreateSessionRequest.name)
}
inline ::std::string* CreateSessionRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.CreateSessionRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSessionRequest::release_name() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.CreateSessionRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSessionRequest::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.CreateSessionRequest.name)
}

// repeated uint64 deviceIDs = 2;
inline int CreateSessionRequest::deviceids_size() const {
  return deviceids_.size();
}
inline void CreateSessionRequest::clear_deviceids() {
  deviceids_.Clear();
}
inline ::google::protobuf::uint64 CreateSessionRequest::deviceids(int index) const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.CreateSessionRequest.deviceIDs)
  return deviceids_.Get(index);
}
inline void CreateSessionRequest::set_deviceids(int index, ::google::protobuf::uint64 value) {
  deviceids_.Set(index, value);
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.CreateSessionRequest.deviceIDs)
}
inline void CreateSessionRequest::add_deviceids(::google::protobuf::uint64 value) {
  deviceids_.Add(value);
  // @@protoc_insertion_point(field_add:github.com.pyrus.platform.protos.CreateSessionRequest.deviceIDs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CreateSessionRequest::deviceids() const {
  // @@protoc_insertion_point(field_list:github.com.pyrus.platform.protos.CreateSessionRequest.deviceIDs)
  return deviceids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CreateSessionRequest::mutable_deviceids() {
  // @@protoc_insertion_point(field_mutable_list:github.com.pyrus.platform.protos.CreateSessionRequest.deviceIDs)
  return &deviceids_;
}

// -------------------------------------------------------------------

// CreateSessionResponse

// .github.com.pyrus.platform.protos.Session session = 1;
inline bool CreateSessionResponse::has_session() const {
  return this != internal_default_instance() && session_ != nullptr;
}
inline void CreateSessionResponse::clear_session() {
  if (GetArenaNoVirtual() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
}
inline const ::github::com::pyrus::platform::protos::Session& CreateSessionResponse::session() const {
  const ::github::com::pyrus::platform::protos::Session* p = session_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.CreateSessionResponse.session)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Session*>(
      &::github::com::pyrus::platform::protos::_Session_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Session* CreateSessionResponse::release_session() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.CreateSessionResponse.session)
  
  ::github::com::pyrus::platform::protos::Session* temp = session_;
  session_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Session* CreateSessionResponse::mutable_session() {
  
  if (session_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Session>(GetArenaNoVirtual());
    session_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.CreateSessionResponse.session)
  return session_;
}
inline void CreateSessionResponse::set_allocated_session(::github::com::pyrus::platform::protos::Session* session) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete session_;
  }
  if (session) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      session = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session, submessage_arena);
    }
    
  } else {
    
  }
  session_ = session;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.CreateSessionResponse.session)
}

// -------------------------------------------------------------------

// GetSessionRequest

// uint64 sessionID = 1;
inline void GetSessionRequest::clear_sessionid() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetSessionRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.GetSessionRequest.sessionID)
  return sessionid_;
}
inline void GetSessionRequest::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.GetSessionRequest.sessionID)
}

// -------------------------------------------------------------------

// GetSessionResponse

// .github.com.pyrus.platform.protos.Session session = 1;
inline bool GetSessionResponse::has_session() const {
  return this != internal_default_instance() && session_ != nullptr;
}
inline void GetSessionResponse::clear_session() {
  if (GetArenaNoVirtual() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
}
inline const ::github::com::pyrus::platform::protos::Session& GetSessionResponse::session() const {
  const ::github::com::pyrus::platform::protos::Session* p = session_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.GetSessionResponse.session)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Session*>(
      &::github::com::pyrus::platform::protos::_Session_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Session* GetSessionResponse::release_session() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.GetSessionResponse.session)
  
  ::github::com::pyrus::platform::protos::Session* temp = session_;
  session_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Session* GetSessionResponse::mutable_session() {
  
  if (session_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Session>(GetArenaNoVirtual());
    session_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.GetSessionResponse.session)
  return session_;
}
inline void GetSessionResponse::set_allocated_session(::github::com::pyrus::platform::protos::Session* session) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete session_;
  }
  if (session) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      session = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session, submessage_arena);
    }
    
  } else {
    
  }
  session_ = session;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.GetSessionResponse.session)
}

// -------------------------------------------------------------------

// DeleteSessionRequest

// uint64 sessionID = 1;
inline void DeleteSessionRequest::clear_sessionid() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DeleteSessionRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.DeleteSessionRequest.sessionID)
  return sessionid_;
}
inline void DeleteSessionRequest::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.DeleteSessionRequest.sessionID)
}

// -------------------------------------------------------------------

// ListSessionsRequest

// -------------------------------------------------------------------

// ListSessionsResponse

// .github.com.pyrus.platform.protos.Session session = 1;
inline bool ListSessionsResponse::has_session() const {
  return this != internal_default_instance() && session_ != nullptr;
}
inline void ListSessionsResponse::clear_session() {
  if (GetArenaNoVirtual() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
}
inline const ::github::com::pyrus::platform::protos::Session& ListSessionsResponse::session() const {
  const ::github::com::pyrus::platform::protos::Session* p = session_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.ListSessionsResponse.session)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Session*>(
      &::github::com::pyrus::platform::protos::_Session_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Session* ListSessionsResponse::release_session() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.ListSessionsResponse.session)
  
  ::github::com::pyrus::platform::protos::Session* temp = session_;
  session_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Session* ListSessionsResponse::mutable_session() {
  
  if (session_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Session>(GetArenaNoVirtual());
    session_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.ListSessionsResponse.session)
  return session_;
}
inline void ListSessionsResponse::set_allocated_session(::github::com::pyrus::platform::protos::Session* session) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete session_;
  }
  if (session) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      session = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session, submessage_arena);
    }
    
  } else {
    
  }
  session_ = session;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.ListSessionsResponse.session)
}

// -------------------------------------------------------------------

// DeleteSessionResponse

// -------------------------------------------------------------------

// WaitForSessionRequest

// uint64 deviceID = 1;
inline void WaitForSessionRequest::clear_deviceid() {
  deviceid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WaitForSessionRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.WaitForSessionRequest.deviceID)
  return deviceid_;
}
inline void WaitForSessionRequest::set_deviceid(::google::protobuf::uint64 value) {
  
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.WaitForSessionRequest.deviceID)
}

// -------------------------------------------------------------------

// WaitForSessionResponse

// uint64 sessionID = 1;
inline void WaitForSessionResponse::clear_sessionid() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WaitForSessionResponse::sessionid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.WaitForSessionResponse.sessionID)
  return sessionid_;
}
inline void WaitForSessionResponse::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.WaitForSessionResponse.sessionID)
}

// -------------------------------------------------------------------

// ListWaitingSessionRequest

// -------------------------------------------------------------------

// ListWaitingSessionResponse

// .github.com.pyrus.platform.protos.Device device = 1;
inline bool ListWaitingSessionResponse::has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::Device& ListWaitingSessionResponse::device() const {
  const ::github::com::pyrus::platform::protos::Device* p = device_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.ListWaitingSessionResponse.device)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Device*>(
      &::github::com::pyrus::platform::protos::_Device_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Device* ListWaitingSessionResponse::release_device() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.ListWaitingSessionResponse.device)
  
  ::github::com::pyrus::platform::protos::Device* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Device* ListWaitingSessionResponse::mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Device>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.ListWaitingSessionResponse.device)
  return device_;
}
inline void ListWaitingSessionResponse::set_allocated_device(::github::com::pyrus::platform::protos::Device* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.ListWaitingSessionResponse.device)
}

// -------------------------------------------------------------------

// JoinSessionRequest

// uint64 deviceID = 1;
inline void JoinSessionRequest::clear_deviceid() {
  deviceid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JoinSessionRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.JoinSessionRequest.deviceID)
  return deviceid_;
}
inline void JoinSessionRequest::set_deviceid(::google::protobuf::uint64 value) {
  
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.JoinSessionRequest.deviceID)
}

// uint64 sessionID = 2;
inline void JoinSessionRequest::clear_sessionid() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 JoinSessionRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.JoinSessionRequest.sessionID)
  return sessionid_;
}
inline void JoinSessionRequest::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.JoinSessionRequest.sessionID)
}

// -------------------------------------------------------------------

// JoinSessionResponse

// .github.com.pyrus.platform.protos.SessionDevice sessionDevice = 1;
inline bool JoinSessionResponse::has_sessiondevice() const {
  return this != internal_default_instance() && sessiondevice_ != nullptr;
}
inline void JoinSessionResponse::clear_sessiondevice() {
  if (GetArenaNoVirtual() == nullptr && sessiondevice_ != nullptr) {
    delete sessiondevice_;
  }
  sessiondevice_ = nullptr;
}
inline const ::github::com::pyrus::platform::protos::SessionDevice& JoinSessionResponse::sessiondevice() const {
  const ::github::com::pyrus::platform::protos::SessionDevice* p = sessiondevice_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.JoinSessionResponse.sessionDevice)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::SessionDevice*>(
      &::github::com::pyrus::platform::protos::_SessionDevice_default_instance_);
}
inline ::github::com::pyrus::platform::protos::SessionDevice* JoinSessionResponse::release_sessiondevice() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.JoinSessionResponse.sessionDevice)
  
  ::github::com::pyrus::platform::protos::SessionDevice* temp = sessiondevice_;
  sessiondevice_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::SessionDevice* JoinSessionResponse::mutable_sessiondevice() {
  
  if (sessiondevice_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::SessionDevice>(GetArenaNoVirtual());
    sessiondevice_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.JoinSessionResponse.sessionDevice)
  return sessiondevice_;
}
inline void JoinSessionResponse::set_allocated_sessiondevice(::github::com::pyrus::platform::protos::SessionDevice* sessiondevice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete sessiondevice_;
  }
  if (sessiondevice) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      sessiondevice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sessiondevice, submessage_arena);
    }
    
  } else {
    
  }
  sessiondevice_ = sessiondevice;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.JoinSessionResponse.sessionDevice)
}

// -------------------------------------------------------------------

// Session

// uint64 id = 1;
inline void Session::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Session::id() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.Session.id)
  return id_;
}
inline void Session::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.Session.id)
}

// string name = 2;
inline void Session::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Session::name() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.Session.name)
  return name_.GetNoArena();
}
inline void Session::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.Session.name)
}
#if LANG_CXX11
inline void Session::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:github.com.pyrus.platform.protos.Session.name)
}
#endif
inline void Session::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:github.com.pyrus.platform.protos.Session.name)
}
inline void Session::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:github.com.pyrus.platform.protos.Session.name)
}
inline ::std::string* Session::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.Session.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Session::release_name() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.Session.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Session::set_allocated_name(::std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.Session.name)
}

// repeated .github.com.pyrus.platform.protos.SessionDevice devices = 3;
inline int Session::devices_size() const {
  return devices_.size();
}
inline void Session::clear_devices() {
  devices_.Clear();
}
inline ::github::com::pyrus::platform::protos::SessionDevice* Session::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.Session.devices)
  return devices_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::github::com::pyrus::platform::protos::SessionDevice >*
Session::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:github.com.pyrus.platform.protos.Session.devices)
  return &devices_;
}
inline const ::github::com::pyrus::platform::protos::SessionDevice& Session::devices(int index) const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.Session.devices)
  return devices_.Get(index);
}
inline ::github::com::pyrus::platform::protos::SessionDevice* Session::add_devices() {
  // @@protoc_insertion_point(field_add:github.com.pyrus.platform.protos.Session.devices)
  return devices_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::github::com::pyrus::platform::protos::SessionDevice >&
Session::devices() const {
  // @@protoc_insertion_point(field_list:github.com.pyrus.platform.protos.Session.devices)
  return devices_;
}

// .google.protobuf.Timestamp created = 4;
inline bool Session::has_created() const {
  return this != internal_default_instance() && created_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Session::created() const {
  const ::google::protobuf::Timestamp* p = created_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.Session.created)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Session::release_created() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.Session.created)
  
  ::google::protobuf::Timestamp* temp = created_;
  created_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Session::mutable_created() {
  
  if (created_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    created_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.Session.created)
  return created_;
}
inline void Session::set_allocated_created(::google::protobuf::Timestamp* created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(created_);
  }
  if (created) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(created)->GetArena();
    if (message_arena != submessage_arena) {
      created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, created, submessage_arena);
    }
    
  } else {
    
  }
  created_ = created;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.Session.created)
}

// .google.protobuf.Timestamp closed = 5;
inline bool Session::has_closed() const {
  return this != internal_default_instance() && closed_ != nullptr;
}
inline const ::google::protobuf::Timestamp& Session::closed() const {
  const ::google::protobuf::Timestamp* p = closed_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.Session.closed)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Session::release_closed() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.Session.closed)
  
  ::google::protobuf::Timestamp* temp = closed_;
  closed_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Session::mutable_closed() {
  
  if (closed_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    closed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.Session.closed)
  return closed_;
}
inline void Session::set_allocated_closed(::google::protobuf::Timestamp* closed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(closed_);
  }
  if (closed) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(closed)->GetArena();
    if (message_arena != submessage_arena) {
      closed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, closed, submessage_arena);
    }
    
  } else {
    
  }
  closed_ = closed;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.Session.closed)
}

// -------------------------------------------------------------------

// SessionDevice

// bool connected = 1;
inline void SessionDevice::clear_connected() {
  connected_ = false;
}
inline bool SessionDevice::connected() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.SessionDevice.connected)
  return connected_;
}
inline void SessionDevice::set_connected(bool value) {
  
  connected_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.SessionDevice.connected)
}

// .github.com.pyrus.platform.protos.Device device = 2;
inline bool SessionDevice::has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::Device& SessionDevice::device() const {
  const ::github::com::pyrus::platform::protos::Device* p = device_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.SessionDevice.device)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Device*>(
      &::github::com::pyrus::platform::protos::_Device_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Device* SessionDevice::release_device() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.SessionDevice.device)
  
  ::github::com::pyrus::platform::protos::Device* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Device* SessionDevice::mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Device>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.SessionDevice.device)
  return device_;
}
inline void SessionDevice::set_allocated_device(::github::com::pyrus::platform::protos::Device* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.SessionDevice.device)
}

// repeated .github.com.pyrus.platform.protos.DataType produces = 3;
inline int SessionDevice::produces_size() const {
  return produces_.size();
}
inline void SessionDevice::clear_produces() {
  produces_.Clear();
}
inline ::github::com::pyrus::platform::protos::DataType SessionDevice::produces(int index) const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.SessionDevice.produces)
  return static_cast< ::github::com::pyrus::platform::protos::DataType >(produces_.Get(index));
}
inline void SessionDevice::set_produces(int index, ::github::com::pyrus::platform::protos::DataType value) {
  produces_.Set(index, value);
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.SessionDevice.produces)
}
inline void SessionDevice::add_produces(::github::com::pyrus::platform::protos::DataType value) {
  produces_.Add(value);
  // @@protoc_insertion_point(field_add:github.com.pyrus.platform.protos.SessionDevice.produces)
}
inline const ::google::protobuf::RepeatedField<int>&
SessionDevice::produces() const {
  // @@protoc_insertion_point(field_list:github.com.pyrus.platform.protos.SessionDevice.produces)
  return produces_;
}
inline ::google::protobuf::RepeatedField<int>*
SessionDevice::mutable_produces() {
  // @@protoc_insertion_point(field_mutable_list:github.com.pyrus.platform.protos.SessionDevice.produces)
  return &produces_;
}

// repeated .github.com.pyrus.platform.protos.DataType consumes = 4;
inline int SessionDevice::consumes_size() const {
  return consumes_.size();
}
inline void SessionDevice::clear_consumes() {
  consumes_.Clear();
}
inline ::github::com::pyrus::platform::protos::DataType SessionDevice::consumes(int index) const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.SessionDevice.consumes)
  return static_cast< ::github::com::pyrus::platform::protos::DataType >(consumes_.Get(index));
}
inline void SessionDevice::set_consumes(int index, ::github::com::pyrus::platform::protos::DataType value) {
  consumes_.Set(index, value);
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.SessionDevice.consumes)
}
inline void SessionDevice::add_consumes(::github::com::pyrus::platform::protos::DataType value) {
  consumes_.Add(value);
  // @@protoc_insertion_point(field_add:github.com.pyrus.platform.protos.SessionDevice.consumes)
}
inline const ::google::protobuf::RepeatedField<int>&
SessionDevice::consumes() const {
  // @@protoc_insertion_point(field_list:github.com.pyrus.platform.protos.SessionDevice.consumes)
  return consumes_;
}
inline ::google::protobuf::RepeatedField<int>*
SessionDevice::mutable_consumes() {
  // @@protoc_insertion_point(field_mutable_list:github.com.pyrus.platform.protos.SessionDevice.consumes)
  return &consumes_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_session_5fservice_2eproto
