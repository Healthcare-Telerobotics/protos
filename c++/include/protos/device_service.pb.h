// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device_service.proto

#ifndef PROTOBUF_INCLUDED_device_5fservice_2eproto
#define PROTOBUF_INCLUDED_device_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_device_5fservice_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_device_5fservice_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_device_5fservice_2eproto();
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {
class CreateDeviceRequest;
class CreateDeviceRequestDefaultTypeInternal;
extern CreateDeviceRequestDefaultTypeInternal _CreateDeviceRequest_default_instance_;
class CreateDeviceResponse;
class CreateDeviceResponseDefaultTypeInternal;
extern CreateDeviceResponseDefaultTypeInternal _CreateDeviceResponse_default_instance_;
class DeleteDeviceRequest;
class DeleteDeviceRequestDefaultTypeInternal;
extern DeleteDeviceRequestDefaultTypeInternal _DeleteDeviceRequest_default_instance_;
class DeleteDeviceResponse;
class DeleteDeviceResponseDefaultTypeInternal;
extern DeleteDeviceResponseDefaultTypeInternal _DeleteDeviceResponse_default_instance_;
class GetDeviceRequest;
class GetDeviceRequestDefaultTypeInternal;
extern GetDeviceRequestDefaultTypeInternal _GetDeviceRequest_default_instance_;
class GetDeviceResponse;
class GetDeviceResponseDefaultTypeInternal;
extern GetDeviceResponseDefaultTypeInternal _GetDeviceResponse_default_instance_;
class ListDevicesRequest;
class ListDevicesRequestDefaultTypeInternal;
extern ListDevicesRequestDefaultTypeInternal _ListDevicesRequest_default_instance_;
class ListDevicesResponse;
class ListDevicesResponseDefaultTypeInternal;
extern ListDevicesResponseDefaultTypeInternal _ListDevicesResponse_default_instance_;
class UpdateDeviceRequest;
class UpdateDeviceRequestDefaultTypeInternal;
extern UpdateDeviceRequestDefaultTypeInternal _UpdateDeviceRequest_default_instance_;
class UpdateDeviceResponse;
class UpdateDeviceResponseDefaultTypeInternal;
extern UpdateDeviceResponseDefaultTypeInternal _UpdateDeviceResponse_default_instance_;
}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github
namespace google {
namespace protobuf {
template<> ::github::com::pyrus::platform::protos::CreateDeviceRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::CreateDeviceRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::CreateDeviceResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::CreateDeviceResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::DeleteDeviceRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::DeleteDeviceRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::DeleteDeviceResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::DeleteDeviceResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::GetDeviceRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::GetDeviceRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::GetDeviceResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::GetDeviceResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::ListDevicesRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::ListDevicesRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::ListDevicesResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::ListDevicesResponse>(Arena*);
template<> ::github::com::pyrus::platform::protos::UpdateDeviceRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::UpdateDeviceRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::UpdateDeviceResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::UpdateDeviceResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {

// ===================================================================

class CreateDeviceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.CreateDeviceRequest) */ {
 public:
  CreateDeviceRequest();
  virtual ~CreateDeviceRequest();

  CreateDeviceRequest(const CreateDeviceRequest& from);

  inline CreateDeviceRequest& operator=(const CreateDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateDeviceRequest(CreateDeviceRequest&& from) noexcept
    : CreateDeviceRequest() {
    *this = ::std::move(from);
  }

  inline CreateDeviceRequest& operator=(CreateDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceRequest*>(
               &_CreateDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreateDeviceRequest* other);
  friend void swap(CreateDeviceRequest& a, CreateDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateDeviceRequest* New() const final {
    return CreateMaybeMessage<CreateDeviceRequest>(nullptr);
  }

  CreateDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateDeviceRequest& from);
  void MergeFrom(const CreateDeviceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.DeviceInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::DeviceInfo& info() const;
  ::github::com::pyrus::platform::protos::DeviceInfo* release_info();
  ::github::com::pyrus::platform::protos::DeviceInfo* mutable_info();
  void set_allocated_info(::github::com::pyrus::platform::protos::DeviceInfo* info);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.CreateDeviceRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::DeviceInfo* info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CreateDeviceResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.CreateDeviceResponse) */ {
 public:
  CreateDeviceResponse();
  virtual ~CreateDeviceResponse();

  CreateDeviceResponse(const CreateDeviceResponse& from);

  inline CreateDeviceResponse& operator=(const CreateDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateDeviceResponse(CreateDeviceResponse&& from) noexcept
    : CreateDeviceResponse() {
    *this = ::std::move(from);
  }

  inline CreateDeviceResponse& operator=(CreateDeviceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const CreateDeviceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const CreateDeviceResponse*>(
               &_CreateDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreateDeviceResponse* other);
  friend void swap(CreateDeviceResponse& a, CreateDeviceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateDeviceResponse* New() const final {
    return CreateMaybeMessage<CreateDeviceResponse>(nullptr);
  }

  CreateDeviceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateDeviceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateDeviceResponse& from);
  void MergeFrom(const CreateDeviceResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDeviceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Device device = 1;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Device& device() const;
  ::github::com::pyrus::platform::protos::Device* release_device();
  ::github::com::pyrus::platform::protos::Device* mutable_device();
  void set_allocated_device(::github::com::pyrus::platform::protos::Device* device);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.CreateDeviceResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Device* device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetDeviceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.GetDeviceRequest) */ {
 public:
  GetDeviceRequest();
  virtual ~GetDeviceRequest();

  GetDeviceRequest(const GetDeviceRequest& from);

  inline GetDeviceRequest& operator=(const GetDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDeviceRequest(GetDeviceRequest&& from) noexcept
    : GetDeviceRequest() {
    *this = ::std::move(from);
  }

  inline GetDeviceRequest& operator=(GetDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const GetDeviceRequest*>(
               &_GetDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetDeviceRequest* other);
  friend void swap(GetDeviceRequest& a, GetDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDeviceRequest* New() const final {
    return CreateMaybeMessage<GetDeviceRequest>(nullptr);
  }

  GetDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetDeviceRequest& from);
  void MergeFrom(const GetDeviceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 deviceID = 1;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  ::google::protobuf::uint64 deviceid() const;
  void set_deviceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.GetDeviceRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 deviceid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class GetDeviceResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.GetDeviceResponse) */ {
 public:
  GetDeviceResponse();
  virtual ~GetDeviceResponse();

  GetDeviceResponse(const GetDeviceResponse& from);

  inline GetDeviceResponse& operator=(const GetDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDeviceResponse(GetDeviceResponse&& from) noexcept
    : GetDeviceResponse() {
    *this = ::std::move(from);
  }

  inline GetDeviceResponse& operator=(GetDeviceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetDeviceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const GetDeviceResponse*>(
               &_GetDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(GetDeviceResponse* other);
  friend void swap(GetDeviceResponse& a, GetDeviceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDeviceResponse* New() const final {
    return CreateMaybeMessage<GetDeviceResponse>(nullptr);
  }

  GetDeviceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetDeviceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetDeviceResponse& from);
  void MergeFrom(const GetDeviceResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDeviceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Device device = 1;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Device& device() const;
  ::github::com::pyrus::platform::protos::Device* release_device();
  ::github::com::pyrus::platform::protos::Device* mutable_device();
  void set_allocated_device(::github::com::pyrus::platform::protos::Device* device);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.GetDeviceResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Device* device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UpdateDeviceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.UpdateDeviceRequest) */ {
 public:
  UpdateDeviceRequest();
  virtual ~UpdateDeviceRequest();

  UpdateDeviceRequest(const UpdateDeviceRequest& from);

  inline UpdateDeviceRequest& operator=(const UpdateDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateDeviceRequest(UpdateDeviceRequest&& from) noexcept
    : UpdateDeviceRequest() {
    *this = ::std::move(from);
  }

  inline UpdateDeviceRequest& operator=(UpdateDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceRequest*>(
               &_UpdateDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UpdateDeviceRequest* other);
  friend void swap(UpdateDeviceRequest& a, UpdateDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateDeviceRequest* New() const final {
    return CreateMaybeMessage<UpdateDeviceRequest>(nullptr);
  }

  UpdateDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateDeviceRequest& from);
  void MergeFrom(const UpdateDeviceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.DeviceInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::github::com::pyrus::platform::protos::DeviceInfo& info() const;
  ::github::com::pyrus::platform::protos::DeviceInfo* release_info();
  ::github::com::pyrus::platform::protos::DeviceInfo* mutable_info();
  void set_allocated_info(::github::com::pyrus::platform::protos::DeviceInfo* info);

  // uint64 deviceID = 1;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  ::google::protobuf::uint64 deviceid() const;
  void set_deviceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.UpdateDeviceRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::DeviceInfo* info_;
  ::google::protobuf::uint64 deviceid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UpdateDeviceResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.UpdateDeviceResponse) */ {
 public:
  UpdateDeviceResponse();
  virtual ~UpdateDeviceResponse();

  UpdateDeviceResponse(const UpdateDeviceResponse& from);

  inline UpdateDeviceResponse& operator=(const UpdateDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateDeviceResponse(UpdateDeviceResponse&& from) noexcept
    : UpdateDeviceResponse() {
    *this = ::std::move(from);
  }

  inline UpdateDeviceResponse& operator=(UpdateDeviceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateDeviceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateDeviceResponse*>(
               &_UpdateDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(UpdateDeviceResponse* other);
  friend void swap(UpdateDeviceResponse& a, UpdateDeviceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateDeviceResponse* New() const final {
    return CreateMaybeMessage<UpdateDeviceResponse>(nullptr);
  }

  UpdateDeviceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateDeviceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateDeviceResponse& from);
  void MergeFrom(const UpdateDeviceResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateDeviceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Device device = 1;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Device& device() const;
  ::github::com::pyrus::platform::protos::Device* release_device();
  ::github::com::pyrus::platform::protos::Device* mutable_device();
  void set_allocated_device(::github::com::pyrus::platform::protos::Device* device);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.UpdateDeviceResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Device* device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ListDevicesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.ListDevicesRequest) */ {
 public:
  ListDevicesRequest();
  virtual ~ListDevicesRequest();

  ListDevicesRequest(const ListDevicesRequest& from);

  inline ListDevicesRequest& operator=(const ListDevicesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDevicesRequest(ListDevicesRequest&& from) noexcept
    : ListDevicesRequest() {
    *this = ::std::move(from);
  }

  inline ListDevicesRequest& operator=(ListDevicesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListDevicesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDevicesRequest* internal_default_instance() {
    return reinterpret_cast<const ListDevicesRequest*>(
               &_ListDevicesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ListDevicesRequest* other);
  friend void swap(ListDevicesRequest& a, ListDevicesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDevicesRequest* New() const final {
    return CreateMaybeMessage<ListDevicesRequest>(nullptr);
  }

  ListDevicesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDevicesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDevicesRequest& from);
  void MergeFrom(const ListDevicesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDevicesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.ListDevicesRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ListDevicesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.ListDevicesResponse) */ {
 public:
  ListDevicesResponse();
  virtual ~ListDevicesResponse();

  ListDevicesResponse(const ListDevicesResponse& from);

  inline ListDevicesResponse& operator=(const ListDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListDevicesResponse(ListDevicesResponse&& from) noexcept
    : ListDevicesResponse() {
    *this = ::std::move(from);
  }

  inline ListDevicesResponse& operator=(ListDevicesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ListDevicesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDevicesResponse* internal_default_instance() {
    return reinterpret_cast<const ListDevicesResponse*>(
               &_ListDevicesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ListDevicesResponse* other);
  friend void swap(ListDevicesResponse& a, ListDevicesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListDevicesResponse* New() const final {
    return CreateMaybeMessage<ListDevicesResponse>(nullptr);
  }

  ListDevicesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListDevicesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListDevicesResponse& from);
  void MergeFrom(const ListDevicesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDevicesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Device device = 1;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Device& device() const;
  ::github::com::pyrus::platform::protos::Device* release_device();
  ::github::com::pyrus::platform::protos::Device* mutable_device();
  void set_allocated_device(::github::com::pyrus::platform::protos::Device* device);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.ListDevicesResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Device* device_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DeleteDeviceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.DeleteDeviceRequest) */ {
 public:
  DeleteDeviceRequest();
  virtual ~DeleteDeviceRequest();

  DeleteDeviceRequest(const DeleteDeviceRequest& from);

  inline DeleteDeviceRequest& operator=(const DeleteDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteDeviceRequest(DeleteDeviceRequest&& from) noexcept
    : DeleteDeviceRequest() {
    *this = ::std::move(from);
  }

  inline DeleteDeviceRequest& operator=(DeleteDeviceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteDeviceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDeviceRequest*>(
               &_DeleteDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(DeleteDeviceRequest* other);
  friend void swap(DeleteDeviceRequest& a, DeleteDeviceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteDeviceRequest* New() const final {
    return CreateMaybeMessage<DeleteDeviceRequest>(nullptr);
  }

  DeleteDeviceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteDeviceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteDeviceRequest& from);
  void MergeFrom(const DeleteDeviceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 deviceID = 1;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 1;
  ::google::protobuf::uint64 deviceid() const;
  void set_deviceid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.DeleteDeviceRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 deviceid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DeleteDeviceResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.DeleteDeviceResponse) */ {
 public:
  DeleteDeviceResponse();
  virtual ~DeleteDeviceResponse();

  DeleteDeviceResponse(const DeleteDeviceResponse& from);

  inline DeleteDeviceResponse& operator=(const DeleteDeviceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteDeviceResponse(DeleteDeviceResponse&& from) noexcept
    : DeleteDeviceResponse() {
    *this = ::std::move(from);
  }

  inline DeleteDeviceResponse& operator=(DeleteDeviceResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DeleteDeviceResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteDeviceResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteDeviceResponse*>(
               &_DeleteDeviceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(DeleteDeviceResponse* other);
  friend void swap(DeleteDeviceResponse& a, DeleteDeviceResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteDeviceResponse* New() const final {
    return CreateMaybeMessage<DeleteDeviceResponse>(nullptr);
  }

  DeleteDeviceResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteDeviceResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteDeviceResponse& from);
  void MergeFrom(const DeleteDeviceResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDeviceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.DeleteDeviceResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_device_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateDeviceRequest

// .github.com.pyrus.platform.protos.DeviceInfo info = 1;
inline bool CreateDeviceRequest::has_info() const {
  return this != internal_default_instance() && info_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::DeviceInfo& CreateDeviceRequest::info() const {
  const ::github::com::pyrus::platform::protos::DeviceInfo* p = info_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.CreateDeviceRequest.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::DeviceInfo*>(
      &::github::com::pyrus::platform::protos::_DeviceInfo_default_instance_);
}
inline ::github::com::pyrus::platform::protos::DeviceInfo* CreateDeviceRequest::release_info() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.CreateDeviceRequest.info)
  
  ::github::com::pyrus::platform::protos::DeviceInfo* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::DeviceInfo* CreateDeviceRequest::mutable_info() {
  
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::DeviceInfo>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.CreateDeviceRequest.info)
  return info_;
}
inline void CreateDeviceRequest::set_allocated_info(::github::com::pyrus::platform::protos::DeviceInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(info_);
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.CreateDeviceRequest.info)
}

// -------------------------------------------------------------------

// CreateDeviceResponse

// .github.com.pyrus.platform.protos.Device device = 1;
inline bool CreateDeviceResponse::has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::Device& CreateDeviceResponse::device() const {
  const ::github::com::pyrus::platform::protos::Device* p = device_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.CreateDeviceResponse.device)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Device*>(
      &::github::com::pyrus::platform::protos::_Device_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Device* CreateDeviceResponse::release_device() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.CreateDeviceResponse.device)
  
  ::github::com::pyrus::platform::protos::Device* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Device* CreateDeviceResponse::mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Device>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.CreateDeviceResponse.device)
  return device_;
}
inline void CreateDeviceResponse::set_allocated_device(::github::com::pyrus::platform::protos::Device* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.CreateDeviceResponse.device)
}

// -------------------------------------------------------------------

// GetDeviceRequest

// uint64 deviceID = 1;
inline void GetDeviceRequest::clear_deviceid() {
  deviceid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetDeviceRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.GetDeviceRequest.deviceID)
  return deviceid_;
}
inline void GetDeviceRequest::set_deviceid(::google::protobuf::uint64 value) {
  
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.GetDeviceRequest.deviceID)
}

// -------------------------------------------------------------------

// GetDeviceResponse

// .github.com.pyrus.platform.protos.Device device = 1;
inline bool GetDeviceResponse::has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::Device& GetDeviceResponse::device() const {
  const ::github::com::pyrus::platform::protos::Device* p = device_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.GetDeviceResponse.device)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Device*>(
      &::github::com::pyrus::platform::protos::_Device_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Device* GetDeviceResponse::release_device() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.GetDeviceResponse.device)
  
  ::github::com::pyrus::platform::protos::Device* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Device* GetDeviceResponse::mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Device>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.GetDeviceResponse.device)
  return device_;
}
inline void GetDeviceResponse::set_allocated_device(::github::com::pyrus::platform::protos::Device* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.GetDeviceResponse.device)
}

// -------------------------------------------------------------------

// UpdateDeviceRequest

// uint64 deviceID = 1;
inline void UpdateDeviceRequest::clear_deviceid() {
  deviceid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdateDeviceRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.UpdateDeviceRequest.deviceID)
  return deviceid_;
}
inline void UpdateDeviceRequest::set_deviceid(::google::protobuf::uint64 value) {
  
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.UpdateDeviceRequest.deviceID)
}

// .github.com.pyrus.platform.protos.DeviceInfo info = 2;
inline bool UpdateDeviceRequest::has_info() const {
  return this != internal_default_instance() && info_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::DeviceInfo& UpdateDeviceRequest::info() const {
  const ::github::com::pyrus::platform::protos::DeviceInfo* p = info_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.UpdateDeviceRequest.info)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::DeviceInfo*>(
      &::github::com::pyrus::platform::protos::_DeviceInfo_default_instance_);
}
inline ::github::com::pyrus::platform::protos::DeviceInfo* UpdateDeviceRequest::release_info() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.UpdateDeviceRequest.info)
  
  ::github::com::pyrus::platform::protos::DeviceInfo* temp = info_;
  info_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::DeviceInfo* UpdateDeviceRequest::mutable_info() {
  
  if (info_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::DeviceInfo>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.UpdateDeviceRequest.info)
  return info_;
}
inline void UpdateDeviceRequest::set_allocated_info(::github::com::pyrus::platform::protos::DeviceInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(info_);
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.UpdateDeviceRequest.info)
}

// -------------------------------------------------------------------

// UpdateDeviceResponse

// .github.com.pyrus.platform.protos.Device device = 1;
inline bool UpdateDeviceResponse::has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::Device& UpdateDeviceResponse::device() const {
  const ::github::com::pyrus::platform::protos::Device* p = device_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.UpdateDeviceResponse.device)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Device*>(
      &::github::com::pyrus::platform::protos::_Device_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Device* UpdateDeviceResponse::release_device() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.UpdateDeviceResponse.device)
  
  ::github::com::pyrus::platform::protos::Device* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Device* UpdateDeviceResponse::mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Device>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.UpdateDeviceResponse.device)
  return device_;
}
inline void UpdateDeviceResponse::set_allocated_device(::github::com::pyrus::platform::protos::Device* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.UpdateDeviceResponse.device)
}

// -------------------------------------------------------------------

// ListDevicesRequest

// -------------------------------------------------------------------

// ListDevicesResponse

// .github.com.pyrus.platform.protos.Device device = 1;
inline bool ListDevicesResponse::has_device() const {
  return this != internal_default_instance() && device_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::Device& ListDevicesResponse::device() const {
  const ::github::com::pyrus::platform::protos::Device* p = device_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.ListDevicesResponse.device)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Device*>(
      &::github::com::pyrus::platform::protos::_Device_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Device* ListDevicesResponse::release_device() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.ListDevicesResponse.device)
  
  ::github::com::pyrus::platform::protos::Device* temp = device_;
  device_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Device* ListDevicesResponse::mutable_device() {
  
  if (device_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Device>(GetArenaNoVirtual());
    device_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.ListDevicesResponse.device)
  return device_;
}
inline void ListDevicesResponse::set_allocated_device(::github::com::pyrus::platform::protos::Device* device) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(device_);
  }
  if (device) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      device = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, device, submessage_arena);
    }
    
  } else {
    
  }
  device_ = device;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.ListDevicesResponse.device)
}

// -------------------------------------------------------------------

// DeleteDeviceRequest

// uint64 deviceID = 1;
inline void DeleteDeviceRequest::clear_deviceid() {
  deviceid_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DeleteDeviceRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.DeleteDeviceRequest.deviceID)
  return deviceid_;
}
inline void DeleteDeviceRequest::set_deviceid(::google::protobuf::uint64 value) {
  
  deviceid_ = value;
  // @@protoc_insertion_point(field_set:github.com.pyrus.platform.protos.DeleteDeviceRequest.deviceID)
}

// -------------------------------------------------------------------

// DeleteDeviceResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_device_5fservice_2eproto
