// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state_manager.proto

#ifndef PROTOBUF_INCLUDED_state_5fmanager_2eproto
#define PROTOBUF_INCLUDED_state_5fmanager_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_state_5fmanager_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_state_5fmanager_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_state_5fmanager_2eproto();
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {
class RecordFramesRequest;
class RecordFramesRequestDefaultTypeInternal;
extern RecordFramesRequestDefaultTypeInternal _RecordFramesRequest_default_instance_;
class RecordFramesResponse;
class RecordFramesResponseDefaultTypeInternal;
extern RecordFramesResponseDefaultTypeInternal _RecordFramesResponse_default_instance_;
}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github
namespace google {
namespace protobuf {
template<> ::github::com::pyrus::platform::protos::RecordFramesRequest* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::RecordFramesRequest>(Arena*);
template<> ::github::com::pyrus::platform::protos::RecordFramesResponse* Arena::CreateMaybeMessage<::github::com::pyrus::platform::protos::RecordFramesResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {

// ===================================================================

class RecordFramesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.RecordFramesRequest) */ {
 public:
  RecordFramesRequest();
  virtual ~RecordFramesRequest();

  RecordFramesRequest(const RecordFramesRequest& from);

  inline RecordFramesRequest& operator=(const RecordFramesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecordFramesRequest(RecordFramesRequest&& from) noexcept
    : RecordFramesRequest() {
    *this = ::std::move(from);
  }

  inline RecordFramesRequest& operator=(RecordFramesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RecordFramesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecordFramesRequest* internal_default_instance() {
    return reinterpret_cast<const RecordFramesRequest*>(
               &_RecordFramesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RecordFramesRequest* other);
  friend void swap(RecordFramesRequest& a, RecordFramesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecordFramesRequest* New() const final {
    return CreateMaybeMessage<RecordFramesRequest>(nullptr);
  }

  RecordFramesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RecordFramesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RecordFramesRequest& from);
  void MergeFrom(const RecordFramesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecordFramesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .github.com.pyrus.platform.protos.Frame data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::github::com::pyrus::platform::protos::Frame& data() const;
  ::github::com::pyrus::platform::protos::Frame* release_data();
  ::github::com::pyrus::platform::protos::Frame* mutable_data();
  void set_allocated_data(::github::com::pyrus::platform::protos::Frame* data);

  // .google.protobuf.Timestamp created = 2;
  bool has_created() const;
  void clear_created();
  static const int kCreatedFieldNumber = 2;
  const ::google::protobuf::Timestamp& created() const;
  ::google::protobuf::Timestamp* release_created();
  ::google::protobuf::Timestamp* mutable_created();
  void set_allocated_created(::google::protobuf::Timestamp* created);

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.RecordFramesRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::github::com::pyrus::platform::protos::Frame* data_;
  ::google::protobuf::Timestamp* created_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_state_5fmanager_2eproto;
};
// -------------------------------------------------------------------

class RecordFramesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:github.com.pyrus.platform.protos.RecordFramesResponse) */ {
 public:
  RecordFramesResponse();
  virtual ~RecordFramesResponse();

  RecordFramesResponse(const RecordFramesResponse& from);

  inline RecordFramesResponse& operator=(const RecordFramesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecordFramesResponse(RecordFramesResponse&& from) noexcept
    : RecordFramesResponse() {
    *this = ::std::move(from);
  }

  inline RecordFramesResponse& operator=(RecordFramesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RecordFramesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RecordFramesResponse* internal_default_instance() {
    return reinterpret_cast<const RecordFramesResponse*>(
               &_RecordFramesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RecordFramesResponse* other);
  friend void swap(RecordFramesResponse& a, RecordFramesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecordFramesResponse* New() const final {
    return CreateMaybeMessage<RecordFramesResponse>(nullptr);
  }

  RecordFramesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RecordFramesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RecordFramesResponse& from);
  void MergeFrom(const RecordFramesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RecordFramesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:github.com.pyrus.platform.protos.RecordFramesResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_state_5fmanager_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RecordFramesRequest

// .github.com.pyrus.platform.protos.Frame data = 1;
inline bool RecordFramesRequest::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline const ::github::com::pyrus::platform::protos::Frame& RecordFramesRequest::data() const {
  const ::github::com::pyrus::platform::protos::Frame* p = data_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.RecordFramesRequest.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::github::com::pyrus::platform::protos::Frame*>(
      &::github::com::pyrus::platform::protos::_Frame_default_instance_);
}
inline ::github::com::pyrus::platform::protos::Frame* RecordFramesRequest::release_data() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.RecordFramesRequest.data)
  
  ::github::com::pyrus::platform::protos::Frame* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::github::com::pyrus::platform::protos::Frame* RecordFramesRequest::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::github::com::pyrus::platform::protos::Frame>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.RecordFramesRequest.data)
  return data_;
}
inline void RecordFramesRequest::set_allocated_data(::github::com::pyrus::platform::protos::Frame* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.RecordFramesRequest.data)
}

// .google.protobuf.Timestamp created = 2;
inline bool RecordFramesRequest::has_created() const {
  return this != internal_default_instance() && created_ != nullptr;
}
inline const ::google::protobuf::Timestamp& RecordFramesRequest::created() const {
  const ::google::protobuf::Timestamp* p = created_;
  // @@protoc_insertion_point(field_get:github.com.pyrus.platform.protos.RecordFramesRequest.created)
  return p != nullptr ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* RecordFramesRequest::release_created() {
  // @@protoc_insertion_point(field_release:github.com.pyrus.platform.protos.RecordFramesRequest.created)
  
  ::google::protobuf::Timestamp* temp = created_;
  created_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* RecordFramesRequest::mutable_created() {
  
  if (created_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    created_ = p;
  }
  // @@protoc_insertion_point(field_mutable:github.com.pyrus.platform.protos.RecordFramesRequest.created)
  return created_;
}
inline void RecordFramesRequest::set_allocated_created(::google::protobuf::Timestamp* created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(created_);
  }
  if (created) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(created)->GetArena();
    if (message_arena != submessage_arena) {
      created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, created, submessage_arena);
    }
    
  } else {
    
  }
  created_ = created;
  // @@protoc_insertion_point(field_set_allocated:github.com.pyrus.platform.protos.RecordFramesRequest.created)
}

// -------------------------------------------------------------------

// RecordFramesResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_state_5fmanager_2eproto
