// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: session_service.proto

#include "session_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Device_common_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_session_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SessionDevice_session_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_session_5fservice_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Session_session_5fservice_2eproto;
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {
class CreateSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateSessionRequest> _instance;
} _CreateSessionRequest_default_instance_;
class CreateSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateSessionResponse> _instance;
} _CreateSessionResponse_default_instance_;
class GetSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSessionRequest> _instance;
} _GetSessionRequest_default_instance_;
class GetSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetSessionResponse> _instance;
} _GetSessionResponse_default_instance_;
class DeleteSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSessionRequest> _instance;
} _DeleteSessionRequest_default_instance_;
class ListSessionsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSessionsRequest> _instance;
} _ListSessionsRequest_default_instance_;
class ListSessionsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListSessionsResponse> _instance;
} _ListSessionsResponse_default_instance_;
class DeleteSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteSessionResponse> _instance;
} _DeleteSessionResponse_default_instance_;
class WaitForSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitForSessionRequest> _instance;
} _WaitForSessionRequest_default_instance_;
class WaitForSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaitForSessionResponse> _instance;
} _WaitForSessionResponse_default_instance_;
class ListWaitingSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListWaitingSessionRequest> _instance;
} _ListWaitingSessionRequest_default_instance_;
class ListWaitingSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListWaitingSessionResponse> _instance;
} _ListWaitingSessionResponse_default_instance_;
class JoinSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinSessionRequest> _instance;
} _JoinSessionRequest_default_instance_;
class JoinSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JoinSessionResponse> _instance;
} _JoinSessionResponse_default_instance_;
class SessionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Session> _instance;
} _Session_default_instance_;
class SessionDeviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SessionDevice> _instance;
} _SessionDevice_default_instance_;
}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github
static void InitDefaultsCreateSessionRequest_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_CreateSessionRequest_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::CreateSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::CreateSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateSessionRequest_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateSessionRequest_session_5fservice_2eproto}, {}};

static void InitDefaultsCreateSessionResponse_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_CreateSessionResponse_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::CreateSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::CreateSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateSessionResponse_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateSessionResponse_session_5fservice_2eproto}, {
      &scc_info_Session_session_5fservice_2eproto.base,}};

static void InitDefaultsGetSessionRequest_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_GetSessionRequest_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::GetSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::GetSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetSessionRequest_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetSessionRequest_session_5fservice_2eproto}, {}};

static void InitDefaultsGetSessionResponse_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_GetSessionResponse_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::GetSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::GetSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetSessionResponse_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetSessionResponse_session_5fservice_2eproto}, {
      &scc_info_Session_session_5fservice_2eproto.base,}};

static void InitDefaultsDeleteSessionRequest_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_DeleteSessionRequest_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::DeleteSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::DeleteSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSessionRequest_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSessionRequest_session_5fservice_2eproto}, {}};

static void InitDefaultsListSessionsRequest_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_ListSessionsRequest_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::ListSessionsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::ListSessionsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListSessionsRequest_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListSessionsRequest_session_5fservice_2eproto}, {}};

static void InitDefaultsListSessionsResponse_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_ListSessionsResponse_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::ListSessionsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::ListSessionsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListSessionsResponse_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListSessionsResponse_session_5fservice_2eproto}, {
      &scc_info_Session_session_5fservice_2eproto.base,}};

static void InitDefaultsDeleteSessionResponse_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_DeleteSessionResponse_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::DeleteSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::DeleteSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteSessionResponse_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteSessionResponse_session_5fservice_2eproto}, {}};

static void InitDefaultsWaitForSessionRequest_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_WaitForSessionRequest_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::WaitForSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::WaitForSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitForSessionRequest_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitForSessionRequest_session_5fservice_2eproto}, {}};

static void InitDefaultsWaitForSessionResponse_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_WaitForSessionResponse_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::WaitForSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::WaitForSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WaitForSessionResponse_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWaitForSessionResponse_session_5fservice_2eproto}, {}};

static void InitDefaultsListWaitingSessionRequest_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_ListWaitingSessionRequest_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::ListWaitingSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::ListWaitingSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListWaitingSessionRequest_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListWaitingSessionRequest_session_5fservice_2eproto}, {}};

static void InitDefaultsListWaitingSessionResponse_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_ListWaitingSessionResponse_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::ListWaitingSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::ListWaitingSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListWaitingSessionResponse_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListWaitingSessionResponse_session_5fservice_2eproto}, {
      &scc_info_Device_common_2eproto.base,}};

static void InitDefaultsJoinSessionRequest_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_JoinSessionRequest_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::JoinSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::JoinSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JoinSessionRequest_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJoinSessionRequest_session_5fservice_2eproto}, {}};

static void InitDefaultsJoinSessionResponse_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_JoinSessionResponse_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::JoinSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::JoinSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JoinSessionResponse_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJoinSessionResponse_session_5fservice_2eproto}, {
      &scc_info_SessionDevice_session_5fservice_2eproto.base,}};

static void InitDefaultsSession_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_Session_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::Session();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::Session::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Session_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSession_session_5fservice_2eproto}, {
      &scc_info_SessionDevice_session_5fservice_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsSessionDevice_session_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::github::com::pyrus::platform::protos::_SessionDevice_default_instance_;
    new (ptr) ::github::com::pyrus::platform::protos::SessionDevice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::github::com::pyrus::platform::protos::SessionDevice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SessionDevice_session_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSessionDevice_session_5fservice_2eproto}, {
      &scc_info_Device_common_2eproto.base,}};

void InitDefaults_session_5fservice_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateSessionRequest_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateSessionResponse_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSessionRequest_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetSessionResponse_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSessionRequest_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSessionsRequest_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListSessionsResponse_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteSessionResponse_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitForSessionRequest_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WaitForSessionResponse_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListWaitingSessionRequest_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListWaitingSessionResponse_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JoinSessionRequest_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JoinSessionResponse_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Session_session_5fservice_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SessionDevice_session_5fservice_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_session_5fservice_2eproto[16];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_session_5fservice_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_session_5fservice_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_session_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::CreateSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::CreateSessionRequest, name_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::CreateSessionRequest, deviceids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::CreateSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::CreateSessionResponse, session_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::GetSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::GetSessionRequest, sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::GetSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::GetSessionResponse, session_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::DeleteSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::DeleteSessionRequest, sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::ListSessionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::ListSessionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::ListSessionsResponse, session_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::DeleteSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::WaitForSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::WaitForSessionRequest, deviceid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::WaitForSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::WaitForSessionResponse, sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::ListWaitingSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::ListWaitingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::ListWaitingSessionResponse, device_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::JoinSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::JoinSessionRequest, deviceid_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::JoinSessionRequest, sessionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::JoinSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::JoinSessionResponse, sessiondevice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::Session, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::Session, id_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::Session, name_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::Session, devices_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::Session, created_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::Session, closed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::SessionDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::SessionDevice, connected_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::SessionDevice, device_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::SessionDevice, produces_),
  PROTOBUF_FIELD_OFFSET(::github::com::pyrus::platform::protos::SessionDevice, consumes_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::github::com::pyrus::platform::protos::CreateSessionRequest)},
  { 7, -1, sizeof(::github::com::pyrus::platform::protos::CreateSessionResponse)},
  { 13, -1, sizeof(::github::com::pyrus::platform::protos::GetSessionRequest)},
  { 19, -1, sizeof(::github::com::pyrus::platform::protos::GetSessionResponse)},
  { 25, -1, sizeof(::github::com::pyrus::platform::protos::DeleteSessionRequest)},
  { 31, -1, sizeof(::github::com::pyrus::platform::protos::ListSessionsRequest)},
  { 36, -1, sizeof(::github::com::pyrus::platform::protos::ListSessionsResponse)},
  { 42, -1, sizeof(::github::com::pyrus::platform::protos::DeleteSessionResponse)},
  { 47, -1, sizeof(::github::com::pyrus::platform::protos::WaitForSessionRequest)},
  { 53, -1, sizeof(::github::com::pyrus::platform::protos::WaitForSessionResponse)},
  { 59, -1, sizeof(::github::com::pyrus::platform::protos::ListWaitingSessionRequest)},
  { 64, -1, sizeof(::github::com::pyrus::platform::protos::ListWaitingSessionResponse)},
  { 70, -1, sizeof(::github::com::pyrus::platform::protos::JoinSessionRequest)},
  { 77, -1, sizeof(::github::com::pyrus::platform::protos::JoinSessionResponse)},
  { 83, -1, sizeof(::github::com::pyrus::platform::protos::Session)},
  { 93, -1, sizeof(::github::com::pyrus::platform::protos::SessionDevice)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_CreateSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_CreateSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_GetSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_GetSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_DeleteSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_ListSessionsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_ListSessionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_DeleteSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_WaitForSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_WaitForSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_ListWaitingSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_ListWaitingSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_JoinSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_JoinSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_Session_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::github::com::pyrus::platform::protos::_SessionDevice_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_session_5fservice_2eproto = {
  {}, AddDescriptors_session_5fservice_2eproto, "session_service.proto", schemas,
  file_default_instances, TableStruct_session_5fservice_2eproto::offsets,
  file_level_metadata_session_5fservice_2eproto, 16, file_level_enum_descriptors_session_5fservice_2eproto, file_level_service_descriptors_session_5fservice_2eproto,
};

const char descriptor_table_protodef_session_5fservice_2eproto[] =
  "\n\025session_service.proto\022 github.com.pyru"
  "s.platform.protos\032\014common.proto\032\037google/"
  "protobuf/timestamp.proto\"7\n\024CreateSessio"
  "nRequest\022\014\n\004name\030\001 \001(\t\022\021\n\tdeviceIDs\030\002 \003("
  "\004\"S\n\025CreateSessionResponse\022:\n\007session\030\001 "
  "\001(\0132).github.com.pyrus.platform.protos.S"
  "ession\"&\n\021GetSessionRequest\022\021\n\tsessionID"
  "\030\001 \001(\004\"P\n\022GetSessionResponse\022:\n\007session\030"
  "\001 \001(\0132).github.com.pyrus.platform.protos"
  ".Session\")\n\024DeleteSessionRequest\022\021\n\tsess"
  "ionID\030\001 \001(\004\"\025\n\023ListSessionsRequest\"R\n\024Li"
  "stSessionsResponse\022:\n\007session\030\001 \001(\0132).gi"
  "thub.com.pyrus.platform.protos.Session\"\027"
  "\n\025DeleteSessionResponse\")\n\025WaitForSessio"
  "nRequest\022\020\n\010deviceID\030\001 \001(\004\"+\n\026WaitForSes"
  "sionResponse\022\021\n\tsessionID\030\001 \001(\004\"\033\n\031ListW"
  "aitingSessionRequest\"V\n\032ListWaitingSessi"
  "onResponse\0228\n\006device\030\001 \001(\0132(.github.com."
  "pyrus.platform.protos.Device\"9\n\022JoinSess"
  "ionRequest\022\020\n\010deviceID\030\001 \001(\004\022\021\n\tsessionI"
  "D\030\002 \001(\004\"]\n\023JoinSessionResponse\022F\n\rsessio"
  "nDevice\030\001 \001(\0132/.github.com.pyrus.platfor"
  "m.protos.SessionDevice\"\276\001\n\007Session\022\n\n\002id"
  "\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\022@\n\007devices\030\003 \003(\0132/."
  "github.com.pyrus.platform.protos.Session"
  "Device\022+\n\007created\030\004 \001(\0132\032.google.protobu"
  "f.Timestamp\022*\n\006closed\030\005 \001(\0132\032.google.pro"
  "tobuf.Timestamp\"\330\001\n\rSessionDevice\022\021\n\tcon"
  "nected\030\001 \001(\010\0228\n\006device\030\002 \001(\0132(.github.co"
  "m.pyrus.platform.protos.Device\022<\n\010produc"
  "es\030\003 \003(\0162*.github.com.pyrus.platform.pro"
  "tos.DataType\022<\n\010consumes\030\004 \003(\0162*.github."
  "com.pyrus.platform.protos.DataType2\365\006\n\016S"
  "essionService\022y\n\006Create\0226.github.com.pyr"
  "us.platform.protos.CreateSessionRequest\032"
  "7.github.com.pyrus.platform.protos.Creat"
  "eSessionResponse\022p\n\003Get\0223.github.com.pyr"
  "us.platform.protos.GetSessionRequest\0324.g"
  "ithub.com.pyrus.platform.protos.GetSessi"
  "onResponse\022w\n\004List\0225.github.com.pyrus.pl"
  "atform.protos.ListSessionsRequest\0326.gith"
  "ub.com.pyrus.platform.protos.ListSession"
  "sResponse0\001\022y\n\006Delete\0226.github.com.pyrus"
  ".platform.protos.DeleteSessionRequest\0327."
  "github.com.pyrus.platform.protos.DeleteS"
  "essionResponse\022~\n\007WaitFor\0227.github.com.p"
  "yrus.platform.protos.WaitForSessionReque"
  "st\0328.github.com.pyrus.platform.protos.Wa"
  "itForSessionResponse0\001\022\212\001\n\013ListWaiting\022;"
  ".github.com.pyrus.platform.protos.ListWa"
  "itingSessionRequest\032<.github.com.pyrus.p"
  "latform.protos.ListWaitingSessionRespons"
  "e0\001\022u\n\004Join\0224.github.com.pyrus.platform."
  "protos.JoinSessionRequest\0325.github.com.p"
  "yrus.platform.protos.JoinSessionResponse"
  "0\001B\"Z\010platform\252\002\025Pyrus.Platform.Protosb\006"
  "proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_session_5fservice_2eproto = {
  false, InitDefaults_session_5fservice_2eproto, 
  descriptor_table_protodef_session_5fservice_2eproto,
  "session_service.proto", &assign_descriptors_table_session_5fservice_2eproto, 2246,
};

void AddDescriptors_session_5fservice_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_common_2eproto,
    ::AddDescriptors_google_2fprotobuf_2ftimestamp_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_session_5fservice_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_session_5fservice_2eproto = []() { AddDescriptors_session_5fservice_2eproto(); return true; }();
namespace github {
namespace com {
namespace pyrus {
namespace platform {
namespace protos {

// ===================================================================

void CreateSessionRequest::InitAsDefaultInstance() {
}
class CreateSessionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateSessionRequest::kNameFieldNumber;
const int CreateSessionRequest::kDeviceIDsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateSessionRequest::CreateSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.CreateSessionRequest)
}
CreateSessionRequest::CreateSessionRequest(const CreateSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      deviceids_(from.deviceids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.CreateSessionRequest)
}

void CreateSessionRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateSessionRequest_session_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateSessionRequest::~CreateSessionRequest() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.CreateSessionRequest)
  SharedDtor();
}

void CreateSessionRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateSessionRequest& CreateSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateSessionRequest_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CreateSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceids_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateSessionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateSessionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("github.com.pyrus.platform.protos.CreateSessionRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated uint64 deviceIDs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) == 18) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedUInt64Parser;
          object = msg->mutable_deviceids();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        do {
          msg->add_deviceids(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 16 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "github.com.pyrus.platform.protos.CreateSessionRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 deviceIDs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_deviceids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_deviceids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.CreateSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.CreateSessionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "github.com.pyrus.platform.protos.CreateSessionRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated uint64 deviceIDs = 2;
  if (this->deviceids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_deviceids_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->deviceids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->deviceids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.CreateSessionRequest)
}

::google::protobuf::uint8* CreateSessionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "github.com.pyrus.platform.protos.CreateSessionRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated uint64 deviceIDs = 2;
  if (this->deviceids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _deviceids_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->deviceids_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.CreateSessionRequest)
  return target;
}

size_t CreateSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 deviceIDs = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->deviceids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _deviceids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSessionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<CreateSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.CreateSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.CreateSessionRequest)
    MergeFrom(*source);
  }
}

void CreateSessionRequest::MergeFrom(const CreateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deviceids_.MergeFrom(from.deviceids_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void CreateSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSessionRequest::CopyFrom(const CreateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.CreateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSessionRequest::IsInitialized() const {
  return true;
}

void CreateSessionRequest::Swap(CreateSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateSessionRequest::InternalSwap(CreateSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  deviceids_.InternalSwap(&other->deviceids_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata CreateSessionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void CreateSessionResponse::InitAsDefaultInstance() {
  ::github::com::pyrus::platform::protos::_CreateSessionResponse_default_instance_._instance.get_mutable()->session_ = const_cast< ::github::com::pyrus::platform::protos::Session*>(
      ::github::com::pyrus::platform::protos::Session::internal_default_instance());
}
class CreateSessionResponse::HasBitSetters {
 public:
  static const ::github::com::pyrus::platform::protos::Session& session(const CreateSessionResponse* msg);
};

const ::github::com::pyrus::platform::protos::Session&
CreateSessionResponse::HasBitSetters::session(const CreateSessionResponse* msg) {
  return *msg->session_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateSessionResponse::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateSessionResponse::CreateSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.CreateSessionResponse)
}
CreateSessionResponse::CreateSessionResponse(const CreateSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_session()) {
    session_ = new ::github::com::pyrus::platform::protos::Session(*from.session_);
  } else {
    session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.CreateSessionResponse)
}

void CreateSessionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_CreateSessionResponse_session_5fservice_2eproto.base);
  session_ = nullptr;
}

CreateSessionResponse::~CreateSessionResponse() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.CreateSessionResponse)
  SharedDtor();
}

void CreateSessionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete session_;
}

void CreateSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateSessionResponse& CreateSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_CreateSessionResponse_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CreateSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* CreateSessionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<CreateSessionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .github.com.pyrus.platform.protos.Session session = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::github::com::pyrus::platform::protos::Session::_InternalParse;
        object = msg->mutable_session();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool CreateSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .github.com.pyrus.platform.protos.Session session = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.CreateSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.CreateSessionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void CreateSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::session(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.CreateSessionResponse)
}

::google::protobuf::uint8* CreateSessionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::session(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.CreateSessionResponse)
  return target;
}

size_t CreateSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *session_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSessionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<CreateSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.CreateSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.CreateSessionResponse)
    MergeFrom(*source);
  }
}

void CreateSessionResponse::MergeFrom(const CreateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    mutable_session()->::github::com::pyrus::platform::protos::Session::MergeFrom(from.session());
  }
}

void CreateSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSessionResponse::CopyFrom(const CreateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.CreateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSessionResponse::IsInitialized() const {
  return true;
}

void CreateSessionResponse::Swap(CreateSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateSessionResponse::InternalSwap(CreateSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(session_, other->session_);
}

::google::protobuf::Metadata CreateSessionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetSessionRequest::InitAsDefaultInstance() {
}
class GetSessionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSessionRequest::kSessionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSessionRequest::GetSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.GetSessionRequest)
}
GetSessionRequest::GetSessionRequest(const GetSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_ = from.sessionid_;
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.GetSessionRequest)
}

void GetSessionRequest::SharedCtor() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
}

GetSessionRequest::~GetSessionRequest() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.GetSessionRequest)
  SharedDtor();
}

void GetSessionRequest::SharedDtor() {
}

void GetSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSessionRequest& GetSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetSessionRequest_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.GetSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessionid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetSessionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetSessionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 sessionID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.GetSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.GetSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.GetSessionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.GetSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.GetSessionRequest)
}

::google::protobuf::uint8* GetSessionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.GetSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.GetSessionRequest)
  return target;
}

size_t GetSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.GetSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.GetSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.GetSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.GetSessionRequest)
    MergeFrom(*source);
  }
}

void GetSessionRequest::MergeFrom(const GetSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.GetSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void GetSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.GetSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionRequest::CopyFrom(const GetSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.GetSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionRequest::IsInitialized() const {
  return true;
}

void GetSessionRequest::Swap(GetSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSessionRequest::InternalSwap(GetSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sessionid_, other->sessionid_);
}

::google::protobuf::Metadata GetSessionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetSessionResponse::InitAsDefaultInstance() {
  ::github::com::pyrus::platform::protos::_GetSessionResponse_default_instance_._instance.get_mutable()->session_ = const_cast< ::github::com::pyrus::platform::protos::Session*>(
      ::github::com::pyrus::platform::protos::Session::internal_default_instance());
}
class GetSessionResponse::HasBitSetters {
 public:
  static const ::github::com::pyrus::platform::protos::Session& session(const GetSessionResponse* msg);
};

const ::github::com::pyrus::platform::protos::Session&
GetSessionResponse::HasBitSetters::session(const GetSessionResponse* msg) {
  return *msg->session_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSessionResponse::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSessionResponse::GetSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.GetSessionResponse)
}
GetSessionResponse::GetSessionResponse(const GetSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_session()) {
    session_ = new ::github::com::pyrus::platform::protos::Session(*from.session_);
  } else {
    session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.GetSessionResponse)
}

void GetSessionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetSessionResponse_session_5fservice_2eproto.base);
  session_ = nullptr;
}

GetSessionResponse::~GetSessionResponse() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.GetSessionResponse)
  SharedDtor();
}

void GetSessionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete session_;
}

void GetSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSessionResponse& GetSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetSessionResponse_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void GetSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.GetSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetSessionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetSessionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .github.com.pyrus.platform.protos.Session session = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::github::com::pyrus::platform::protos::Session::_InternalParse;
        object = msg->mutable_session();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.GetSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .github.com.pyrus.platform.protos.Session session = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.GetSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.GetSessionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.GetSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::session(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.GetSessionResponse)
}

::google::protobuf::uint8* GetSessionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.GetSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::session(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.GetSessionResponse)
  return target;
}

size_t GetSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.GetSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *session_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.GetSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSessionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.GetSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.GetSessionResponse)
    MergeFrom(*source);
  }
}

void GetSessionResponse::MergeFrom(const GetSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.GetSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    mutable_session()->::github::com::pyrus::platform::protos::Session::MergeFrom(from.session());
  }
}

void GetSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.GetSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSessionResponse::CopyFrom(const GetSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.GetSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSessionResponse::IsInitialized() const {
  return true;
}

void GetSessionResponse::Swap(GetSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSessionResponse::InternalSwap(GetSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(session_, other->session_);
}

::google::protobuf::Metadata GetSessionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteSessionRequest::InitAsDefaultInstance() {
}
class DeleteSessionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteSessionRequest::kSessionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSessionRequest::DeleteSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.DeleteSessionRequest)
}
DeleteSessionRequest::DeleteSessionRequest(const DeleteSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_ = from.sessionid_;
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.DeleteSessionRequest)
}

void DeleteSessionRequest::SharedCtor() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
}

DeleteSessionRequest::~DeleteSessionRequest() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.DeleteSessionRequest)
  SharedDtor();
}

void DeleteSessionRequest::SharedDtor() {
}

void DeleteSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteSessionRequest& DeleteSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteSessionRequest_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DeleteSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessionid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteSessionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteSessionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 sessionID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.DeleteSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.DeleteSessionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.DeleteSessionRequest)
}

::google::protobuf::uint8* DeleteSessionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.DeleteSessionRequest)
  return target;
}

size_t DeleteSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSessionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.DeleteSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.DeleteSessionRequest)
    MergeFrom(*source);
  }
}

void DeleteSessionRequest::MergeFrom(const DeleteSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void DeleteSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSessionRequest::CopyFrom(const DeleteSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.DeleteSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSessionRequest::IsInitialized() const {
  return true;
}

void DeleteSessionRequest::Swap(DeleteSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteSessionRequest::InternalSwap(DeleteSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sessionid_, other->sessionid_);
}

::google::protobuf::Metadata DeleteSessionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListSessionsRequest::InitAsDefaultInstance() {
}
class ListSessionsRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSessionsRequest::ListSessionsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.ListSessionsRequest)
}
ListSessionsRequest::ListSessionsRequest(const ListSessionsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.ListSessionsRequest)
}

void ListSessionsRequest::SharedCtor() {
}

ListSessionsRequest::~ListSessionsRequest() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.ListSessionsRequest)
  SharedDtor();
}

void ListSessionsRequest::SharedDtor() {
}

void ListSessionsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSessionsRequest& ListSessionsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListSessionsRequest_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListSessionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSessionsRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListSessionsRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSessionsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.ListSessionsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.ListSessionsRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSessionsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.ListSessionsRequest)
}

::google::protobuf::uint8* ListSessionsRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.ListSessionsRequest)
  return target;
}

size_t ListSessionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSessionsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSessionsRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListSessionsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.ListSessionsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.ListSessionsRequest)
    MergeFrom(*source);
  }
}

void ListSessionsRequest::MergeFrom(const ListSessionsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListSessionsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSessionsRequest::CopyFrom(const ListSessionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.ListSessionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSessionsRequest::IsInitialized() const {
  return true;
}

void ListSessionsRequest::Swap(ListSessionsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSessionsRequest::InternalSwap(ListSessionsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListSessionsRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListSessionsResponse::InitAsDefaultInstance() {
  ::github::com::pyrus::platform::protos::_ListSessionsResponse_default_instance_._instance.get_mutable()->session_ = const_cast< ::github::com::pyrus::platform::protos::Session*>(
      ::github::com::pyrus::platform::protos::Session::internal_default_instance());
}
class ListSessionsResponse::HasBitSetters {
 public:
  static const ::github::com::pyrus::platform::protos::Session& session(const ListSessionsResponse* msg);
};

const ::github::com::pyrus::platform::protos::Session&
ListSessionsResponse::HasBitSetters::session(const ListSessionsResponse* msg) {
  return *msg->session_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListSessionsResponse::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListSessionsResponse::ListSessionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.ListSessionsResponse)
}
ListSessionsResponse::ListSessionsResponse(const ListSessionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_session()) {
    session_ = new ::github::com::pyrus::platform::protos::Session(*from.session_);
  } else {
    session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.ListSessionsResponse)
}

void ListSessionsResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListSessionsResponse_session_5fservice_2eproto.base);
  session_ = nullptr;
}

ListSessionsResponse::~ListSessionsResponse() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.ListSessionsResponse)
  SharedDtor();
}

void ListSessionsResponse::SharedDtor() {
  if (this != internal_default_instance()) delete session_;
}

void ListSessionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListSessionsResponse& ListSessionsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListSessionsResponse_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListSessionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && session_ != nullptr) {
    delete session_;
  }
  session_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListSessionsResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListSessionsResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .github.com.pyrus.platform.protos.Session session = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::github::com::pyrus::platform::protos::Session::_InternalParse;
        object = msg->mutable_session();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListSessionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .github.com.pyrus.platform.protos.Session session = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.ListSessionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.ListSessionsResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListSessionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::session(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.ListSessionsResponse)
}

::google::protobuf::uint8* ListSessionsResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::session(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.ListSessionsResponse)
  return target;
}

size_t ListSessionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Session session = 1;
  if (this->has_session()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *session_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListSessionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListSessionsResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListSessionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.ListSessionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.ListSessionsResponse)
    MergeFrom(*source);
  }
}

void ListSessionsResponse::MergeFrom(const ListSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    mutable_session()->::github::com::pyrus::platform::protos::Session::MergeFrom(from.session());
  }
}

void ListSessionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListSessionsResponse::CopyFrom(const ListSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.ListSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSessionsResponse::IsInitialized() const {
  return true;
}

void ListSessionsResponse::Swap(ListSessionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListSessionsResponse::InternalSwap(ListSessionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(session_, other->session_);
}

::google::protobuf::Metadata ListSessionsResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DeleteSessionResponse::InitAsDefaultInstance() {
}
class DeleteSessionResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteSessionResponse::DeleteSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.DeleteSessionResponse)
}
DeleteSessionResponse::DeleteSessionResponse(const DeleteSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.DeleteSessionResponse)
}

void DeleteSessionResponse::SharedCtor() {
}

DeleteSessionResponse::~DeleteSessionResponse() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.DeleteSessionResponse)
  SharedDtor();
}

void DeleteSessionResponse::SharedDtor() {
}

void DeleteSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteSessionResponse& DeleteSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DeleteSessionResponse_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void DeleteSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DeleteSessionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DeleteSessionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DeleteSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.DeleteSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.DeleteSessionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DeleteSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.DeleteSessionResponse)
}

::google::protobuf::uint8* DeleteSessionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.DeleteSessionResponse)
  return target;
}

size_t DeleteSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteSessionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DeleteSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.DeleteSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.DeleteSessionResponse)
    MergeFrom(*source);
  }
}

void DeleteSessionResponse::MergeFrom(const DeleteSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeleteSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteSessionResponse::CopyFrom(const DeleteSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.DeleteSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSessionResponse::IsInitialized() const {
  return true;
}

void DeleteSessionResponse::Swap(DeleteSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteSessionResponse::InternalSwap(DeleteSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteSessionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WaitForSessionRequest::InitAsDefaultInstance() {
}
class WaitForSessionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitForSessionRequest::kDeviceIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitForSessionRequest::WaitForSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.WaitForSessionRequest)
}
WaitForSessionRequest::WaitForSessionRequest(const WaitForSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_ = from.deviceid_;
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.WaitForSessionRequest)
}

void WaitForSessionRequest::SharedCtor() {
  deviceid_ = PROTOBUF_ULONGLONG(0);
}

WaitForSessionRequest::~WaitForSessionRequest() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.WaitForSessionRequest)
  SharedDtor();
}

void WaitForSessionRequest::SharedDtor() {
}

void WaitForSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WaitForSessionRequest& WaitForSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WaitForSessionRequest_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void WaitForSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deviceid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WaitForSessionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WaitForSessionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 deviceID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_deviceid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WaitForSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 deviceID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.WaitForSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.WaitForSessionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WaitForSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 deviceID = 1;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->deviceid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.WaitForSessionRequest)
}

::google::protobuf::uint8* WaitForSessionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 deviceID = 1;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->deviceid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.WaitForSessionRequest)
  return target;
}

size_t WaitForSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 deviceID = 1;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForSessionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<WaitForSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.WaitForSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.WaitForSessionRequest)
    MergeFrom(*source);
  }
}

void WaitForSessionRequest::MergeFrom(const WaitForSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
}

void WaitForSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForSessionRequest::CopyFrom(const WaitForSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.WaitForSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForSessionRequest::IsInitialized() const {
  return true;
}

void WaitForSessionRequest::Swap(WaitForSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitForSessionRequest::InternalSwap(WaitForSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(deviceid_, other->deviceid_);
}

::google::protobuf::Metadata WaitForSessionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void WaitForSessionResponse::InitAsDefaultInstance() {
}
class WaitForSessionResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaitForSessionResponse::kSessionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaitForSessionResponse::WaitForSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.WaitForSessionResponse)
}
WaitForSessionResponse::WaitForSessionResponse(const WaitForSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_ = from.sessionid_;
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.WaitForSessionResponse)
}

void WaitForSessionResponse::SharedCtor() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
}

WaitForSessionResponse::~WaitForSessionResponse() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.WaitForSessionResponse)
  SharedDtor();
}

void WaitForSessionResponse::SharedDtor() {
}

void WaitForSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WaitForSessionResponse& WaitForSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_WaitForSessionResponse_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void WaitForSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessionid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WaitForSessionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<WaitForSessionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 sessionID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WaitForSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.WaitForSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.WaitForSessionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WaitForSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.WaitForSessionResponse)
}

::google::protobuf::uint8* WaitForSessionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.WaitForSessionResponse)
  return target;
}

size_t WaitForSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sessionID = 1;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WaitForSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WaitForSessionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<WaitForSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.WaitForSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.WaitForSessionResponse)
    MergeFrom(*source);
  }
}

void WaitForSessionResponse::MergeFrom(const WaitForSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void WaitForSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaitForSessionResponse::CopyFrom(const WaitForSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.WaitForSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaitForSessionResponse::IsInitialized() const {
  return true;
}

void WaitForSessionResponse::Swap(WaitForSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaitForSessionResponse::InternalSwap(WaitForSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sessionid_, other->sessionid_);
}

::google::protobuf::Metadata WaitForSessionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListWaitingSessionRequest::InitAsDefaultInstance() {
}
class ListWaitingSessionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWaitingSessionRequest::ListWaitingSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
}
ListWaitingSessionRequest::ListWaitingSessionRequest(const ListWaitingSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
}

void ListWaitingSessionRequest::SharedCtor() {
}

ListWaitingSessionRequest::~ListWaitingSessionRequest() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  SharedDtor();
}

void ListWaitingSessionRequest::SharedDtor() {
}

void ListWaitingSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListWaitingSessionRequest& ListWaitingSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListWaitingSessionRequest_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListWaitingSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListWaitingSessionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListWaitingSessionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListWaitingSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListWaitingSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
}

::google::protobuf::uint8* ListWaitingSessionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  return target;
}

size_t ListWaitingSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWaitingSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWaitingSessionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ListWaitingSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
    MergeFrom(*source);
  }
}

void ListWaitingSessionRequest::MergeFrom(const ListWaitingSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListWaitingSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWaitingSessionRequest::CopyFrom(const ListWaitingSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.ListWaitingSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWaitingSessionRequest::IsInitialized() const {
  return true;
}

void ListWaitingSessionRequest::Swap(ListWaitingSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWaitingSessionRequest::InternalSwap(ListWaitingSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListWaitingSessionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ListWaitingSessionResponse::InitAsDefaultInstance() {
  ::github::com::pyrus::platform::protos::_ListWaitingSessionResponse_default_instance_._instance.get_mutable()->device_ = const_cast< ::github::com::pyrus::platform::protos::Device*>(
      ::github::com::pyrus::platform::protos::Device::internal_default_instance());
}
class ListWaitingSessionResponse::HasBitSetters {
 public:
  static const ::github::com::pyrus::platform::protos::Device& device(const ListWaitingSessionResponse* msg);
};

const ::github::com::pyrus::platform::protos::Device&
ListWaitingSessionResponse::HasBitSetters::device(const ListWaitingSessionResponse* msg) {
  return *msg->device_;
}
void ListWaitingSessionResponse::clear_device() {
  if (GetArenaNoVirtual() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListWaitingSessionResponse::kDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListWaitingSessionResponse::ListWaitingSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
}
ListWaitingSessionResponse::ListWaitingSessionResponse(const ListWaitingSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device()) {
    device_ = new ::github::com::pyrus::platform::protos::Device(*from.device_);
  } else {
    device_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
}

void ListWaitingSessionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ListWaitingSessionResponse_session_5fservice_2eproto.base);
  device_ = nullptr;
}

ListWaitingSessionResponse::~ListWaitingSessionResponse() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  SharedDtor();
}

void ListWaitingSessionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete device_;
}

void ListWaitingSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListWaitingSessionResponse& ListWaitingSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ListWaitingSessionResponse_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ListWaitingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ListWaitingSessionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ListWaitingSessionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .github.com.pyrus.platform.protos.Device device = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::github::com::pyrus::platform::protos::Device::_InternalParse;
        object = msg->mutable_device();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ListWaitingSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .github.com.pyrus.platform.protos.Device device = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ListWaitingSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Device device = 1;
  if (this->has_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::device(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
}

::google::protobuf::uint8* ListWaitingSessionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Device device = 1;
  if (this->has_device()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::device(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  return target;
}

size_t ListWaitingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.Device device = 1;
  if (this->has_device()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListWaitingSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListWaitingSessionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ListWaitingSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
    MergeFrom(*source);
  }
}

void ListWaitingSessionResponse::MergeFrom(const ListWaitingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_device()) {
    mutable_device()->::github::com::pyrus::platform::protos::Device::MergeFrom(from.device());
  }
}

void ListWaitingSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListWaitingSessionResponse::CopyFrom(const ListWaitingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.ListWaitingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListWaitingSessionResponse::IsInitialized() const {
  return true;
}

void ListWaitingSessionResponse::Swap(ListWaitingSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListWaitingSessionResponse::InternalSwap(ListWaitingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(device_, other->device_);
}

::google::protobuf::Metadata ListWaitingSessionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void JoinSessionRequest::InitAsDefaultInstance() {
}
class JoinSessionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinSessionRequest::kDeviceIDFieldNumber;
const int JoinSessionRequest::kSessionIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinSessionRequest::JoinSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.JoinSessionRequest)
}
JoinSessionRequest::JoinSessionRequest(const JoinSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deviceid_, &from.deviceid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&deviceid_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.JoinSessionRequest)
}

void JoinSessionRequest::SharedCtor() {
  ::memset(&deviceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&deviceid_)) + sizeof(sessionid_));
}

JoinSessionRequest::~JoinSessionRequest() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.JoinSessionRequest)
  SharedDtor();
}

void JoinSessionRequest::SharedDtor() {
}

void JoinSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JoinSessionRequest& JoinSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JoinSessionRequest_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void JoinSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&deviceid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&deviceid_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JoinSessionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JoinSessionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 deviceID = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_deviceid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 sessionID = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_sessionid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JoinSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 deviceID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deviceid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.JoinSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.JoinSessionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JoinSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 deviceID = 1;
  if (this->deviceid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->deviceid(), output);
  }

  // uint64 sessionID = 2;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.JoinSessionRequest)
}

::google::protobuf::uint8* JoinSessionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 deviceID = 1;
  if (this->deviceid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->deviceid(), target);
  }

  // uint64 sessionID = 2;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.JoinSessionRequest)
  return target;
}

size_t JoinSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 deviceID = 1;
  if (this->deviceid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->deviceid());
  }

  // uint64 sessionID = 2;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinSessionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<JoinSessionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.JoinSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.JoinSessionRequest)
    MergeFrom(*source);
  }
}

void JoinSessionRequest::MergeFrom(const JoinSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deviceid() != 0) {
    set_deviceid(from.deviceid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void JoinSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinSessionRequest::CopyFrom(const JoinSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.JoinSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinSessionRequest::IsInitialized() const {
  return true;
}

void JoinSessionRequest::Swap(JoinSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinSessionRequest::InternalSwap(JoinSessionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(deviceid_, other->deviceid_);
  swap(sessionid_, other->sessionid_);
}

::google::protobuf::Metadata JoinSessionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void JoinSessionResponse::InitAsDefaultInstance() {
  ::github::com::pyrus::platform::protos::_JoinSessionResponse_default_instance_._instance.get_mutable()->sessiondevice_ = const_cast< ::github::com::pyrus::platform::protos::SessionDevice*>(
      ::github::com::pyrus::platform::protos::SessionDevice::internal_default_instance());
}
class JoinSessionResponse::HasBitSetters {
 public:
  static const ::github::com::pyrus::platform::protos::SessionDevice& sessiondevice(const JoinSessionResponse* msg);
};

const ::github::com::pyrus::platform::protos::SessionDevice&
JoinSessionResponse::HasBitSetters::sessiondevice(const JoinSessionResponse* msg) {
  return *msg->sessiondevice_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinSessionResponse::kSessionDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinSessionResponse::JoinSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.JoinSessionResponse)
}
JoinSessionResponse::JoinSessionResponse(const JoinSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sessiondevice()) {
    sessiondevice_ = new ::github::com::pyrus::platform::protos::SessionDevice(*from.sessiondevice_);
  } else {
    sessiondevice_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.JoinSessionResponse)
}

void JoinSessionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_JoinSessionResponse_session_5fservice_2eproto.base);
  sessiondevice_ = nullptr;
}

JoinSessionResponse::~JoinSessionResponse() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.JoinSessionResponse)
  SharedDtor();
}

void JoinSessionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete sessiondevice_;
}

void JoinSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JoinSessionResponse& JoinSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JoinSessionResponse_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void JoinSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && sessiondevice_ != nullptr) {
    delete sessiondevice_;
  }
  sessiondevice_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JoinSessionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JoinSessionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .github.com.pyrus.platform.protos.SessionDevice sessionDevice = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::github::com::pyrus::platform::protos::SessionDevice::_InternalParse;
        object = msg->mutable_sessiondevice();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JoinSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .github.com.pyrus.platform.protos.SessionDevice sessionDevice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sessiondevice()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.JoinSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.JoinSessionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JoinSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.SessionDevice sessionDevice = 1;
  if (this->has_sessiondevice()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::sessiondevice(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.JoinSessionResponse)
}

::google::protobuf::uint8* JoinSessionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.SessionDevice sessionDevice = 1;
  if (this->has_sessiondevice()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::sessiondevice(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.JoinSessionResponse)
  return target;
}

size_t JoinSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .github.com.pyrus.platform.protos.SessionDevice sessionDevice = 1;
  if (this->has_sessiondevice()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sessiondevice_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JoinSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinSessionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<JoinSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.JoinSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.JoinSessionResponse)
    MergeFrom(*source);
  }
}

void JoinSessionResponse::MergeFrom(const JoinSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sessiondevice()) {
    mutable_sessiondevice()->::github::com::pyrus::platform::protos::SessionDevice::MergeFrom(from.sessiondevice());
  }
}

void JoinSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinSessionResponse::CopyFrom(const JoinSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.JoinSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinSessionResponse::IsInitialized() const {
  return true;
}

void JoinSessionResponse::Swap(JoinSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinSessionResponse::InternalSwap(JoinSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(sessiondevice_, other->sessiondevice_);
}

::google::protobuf::Metadata JoinSessionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Session::InitAsDefaultInstance() {
  ::github::com::pyrus::platform::protos::_Session_default_instance_._instance.get_mutable()->created_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::github::com::pyrus::platform::protos::_Session_default_instance_._instance.get_mutable()->closed_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
class Session::HasBitSetters {
 public:
  static const ::google::protobuf::Timestamp& created(const Session* msg);
  static const ::google::protobuf::Timestamp& closed(const Session* msg);
};

const ::google::protobuf::Timestamp&
Session::HasBitSetters::created(const Session* msg) {
  return *msg->created_;
}
const ::google::protobuf::Timestamp&
Session::HasBitSetters::closed(const Session* msg) {
  return *msg->closed_;
}
void Session::clear_created() {
  if (GetArenaNoVirtual() == nullptr && created_ != nullptr) {
    delete created_;
  }
  created_ = nullptr;
}
void Session::clear_closed() {
  if (GetArenaNoVirtual() == nullptr && closed_ != nullptr) {
    delete closed_;
  }
  closed_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Session::kIdFieldNumber;
const int Session::kNameFieldNumber;
const int Session::kDevicesFieldNumber;
const int Session::kCreatedFieldNumber;
const int Session::kClosedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Session::Session()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.Session)
}
Session::Session(const Session& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      devices_(from.devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_created()) {
    created_ = new ::google::protobuf::Timestamp(*from.created_);
  } else {
    created_ = nullptr;
  }
  if (from.has_closed()) {
    closed_ = new ::google::protobuf::Timestamp(*from.closed_);
  } else {
    closed_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.Session)
}

void Session::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Session_session_5fservice_2eproto.base);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&created_)) + sizeof(id_));
}

Session::~Session() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.Session)
  SharedDtor();
}

void Session::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_;
  if (this != internal_default_instance()) delete closed_;
}

void Session::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Session& Session::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Session_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void Session::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && created_ != nullptr) {
    delete created_;
  }
  created_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && closed_ != nullptr) {
    delete closed_;
  }
  closed_ = nullptr;
  id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Session::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Session*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("github.com.pyrus.platform.protos.Session.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .github.com.pyrus.platform.protos.SessionDevice devices = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::github::com::pyrus::platform::protos::SessionDevice::_InternalParse;
          object = msg->add_devices();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // .google.protobuf.Timestamp created = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_created();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Timestamp closed = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Timestamp::_InternalParse;
        object = msg->mutable_closed();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Session::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.Session)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "github.com.pyrus.platform.protos.Session.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .github.com.pyrus.platform.protos.SessionDevice devices = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_devices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp created = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp closed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_closed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.Session)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.Session)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Session::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "github.com.pyrus.platform.protos.Session.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .github.com.pyrus.platform.protos.SessionDevice devices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->devices(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Timestamp created = 4;
  if (this->has_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::created(this), output);
  }

  // .google.protobuf.Timestamp closed = 5;
  if (this->has_closed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::closed(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.Session)
}

::google::protobuf::uint8* Session::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.Session)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "github.com.pyrus.platform.protos.Session.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .github.com.pyrus.platform.protos.SessionDevice devices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->devices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->devices(static_cast<int>(i)), target);
  }

  // .google.protobuf.Timestamp created = 4;
  if (this->has_created()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::created(this), target);
  }

  // .google.protobuf.Timestamp closed = 5;
  if (this->has_closed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::closed(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.Session)
  return target;
}

size_t Session::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.Session)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .github.com.pyrus.platform.protos.SessionDevice devices = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->devices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->devices(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.protobuf.Timestamp created = 4;
  if (this->has_created()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *created_);
  }

  // .google.protobuf.Timestamp closed = 5;
  if (this->has_closed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *closed_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Session::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.Session)
  GOOGLE_DCHECK_NE(&from, this);
  const Session* source =
      ::google::protobuf::DynamicCastToGenerated<Session>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.Session)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.Session)
    MergeFrom(*source);
  }
}

void Session::MergeFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.Session)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_created()) {
    mutable_created()->::google::protobuf::Timestamp::MergeFrom(from.created());
  }
  if (from.has_closed()) {
    mutable_closed()->::google::protobuf::Timestamp::MergeFrom(from.closed());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Session::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Session::CopyFrom(const Session& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.Session)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Session::IsInitialized() const {
  return true;
}

void Session::Swap(Session* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Session::InternalSwap(Session* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&devices_)->InternalSwap(CastToBase(&other->devices_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(created_, other->created_);
  swap(closed_, other->closed_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata Session::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SessionDevice::InitAsDefaultInstance() {
  ::github::com::pyrus::platform::protos::_SessionDevice_default_instance_._instance.get_mutable()->device_ = const_cast< ::github::com::pyrus::platform::protos::Device*>(
      ::github::com::pyrus::platform::protos::Device::internal_default_instance());
}
class SessionDevice::HasBitSetters {
 public:
  static const ::github::com::pyrus::platform::protos::Device& device(const SessionDevice* msg);
};

const ::github::com::pyrus::platform::protos::Device&
SessionDevice::HasBitSetters::device(const SessionDevice* msg) {
  return *msg->device_;
}
void SessionDevice::clear_device() {
  if (GetArenaNoVirtual() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SessionDevice::kConnectedFieldNumber;
const int SessionDevice::kDeviceFieldNumber;
const int SessionDevice::kProducesFieldNumber;
const int SessionDevice::kConsumesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SessionDevice::SessionDevice()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:github.com.pyrus.platform.protos.SessionDevice)
}
SessionDevice::SessionDevice(const SessionDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      produces_(from.produces_),
      consumes_(from.consumes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_device()) {
    device_ = new ::github::com::pyrus::platform::protos::Device(*from.device_);
  } else {
    device_ = nullptr;
  }
  connected_ = from.connected_;
  // @@protoc_insertion_point(copy_constructor:github.com.pyrus.platform.protos.SessionDevice)
}

void SessionDevice::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SessionDevice_session_5fservice_2eproto.base);
  ::memset(&device_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&connected_) -
      reinterpret_cast<char*>(&device_)) + sizeof(connected_));
}

SessionDevice::~SessionDevice() {
  // @@protoc_insertion_point(destructor:github.com.pyrus.platform.protos.SessionDevice)
  SharedDtor();
}

void SessionDevice::SharedDtor() {
  if (this != internal_default_instance()) delete device_;
}

void SessionDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SessionDevice& SessionDevice::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SessionDevice_session_5fservice_2eproto.base);
  return *internal_default_instance();
}


void SessionDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.pyrus.platform.protos.SessionDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  produces_.Clear();
  consumes_.Clear();
  if (GetArenaNoVirtual() == nullptr && device_ != nullptr) {
    delete device_;
  }
  device_ = nullptr;
  connected_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SessionDevice::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SessionDevice*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool connected = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_connected(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .github.com.pyrus.platform.protos.Device device = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::github::com::pyrus::platform::protos::Device::_InternalParse;
        object = msg->mutable_device();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // repeated .github.com.pyrus.platform.protos.DataType produces = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedEnumParser;
          object = msg->mutable_produces();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
          msg->add_produces(static_cast<::github::com::pyrus::platform::protos::DataType>(val));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // repeated .github.com.pyrus.platform.protos.DataType consumes = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) == 34) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedEnumParser;
          object = msg->mutable_consumes();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        do {
          ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
          msg->add_consumes(static_cast<::github::com::pyrus::platform::protos::DataType>(val));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 32 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SessionDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:github.com.pyrus.platform.protos.SessionDevice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool connected = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .github.com.pyrus.platform.protos.Device device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .github.com.pyrus.platform.protos.DataType produces = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value = 0;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_produces(static_cast< ::github::com::pyrus::platform::protos::DataType >(value));
          }
          input->PopLimit(limit);
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_produces(static_cast< ::github::com::pyrus::platform::protos::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .github.com.pyrus.platform.protos.DataType consumes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value = 0;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_consumes(static_cast< ::github::com::pyrus::platform::protos::DataType >(value));
          }
          input->PopLimit(limit);
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_consumes(static_cast< ::github::com::pyrus::platform::protos::DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:github.com.pyrus.platform.protos.SessionDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:github.com.pyrus.platform.protos.SessionDevice)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SessionDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:github.com.pyrus.platform.protos.SessionDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool connected = 1;
  if (this->connected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->connected(), output);
  }

  // .github.com.pyrus.platform.protos.Device device = 2;
  if (this->has_device()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::device(this), output);
  }

  // repeated .github.com.pyrus.platform.protos.DataType produces = 3;
  if (this->produces_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_produces_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->produces_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->produces(i), output);
  }

  // repeated .github.com.pyrus.platform.protos.DataType consumes = 4;
  if (this->consumes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_consumes_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->consumes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->consumes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:github.com.pyrus.platform.protos.SessionDevice)
}

::google::protobuf::uint8* SessionDevice::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.pyrus.platform.protos.SessionDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool connected = 1;
  if (this->connected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->connected(), target);
  }

  // .github.com.pyrus.platform.protos.Device device = 2;
  if (this->has_device()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::device(this), target);
  }

  // repeated .github.com.pyrus.platform.protos.DataType produces = 3;
  if (this->produces_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      _produces_cached_byte_size_.load(std::memory_order_relaxed),
        target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->produces_, target);
  }

  // repeated .github.com.pyrus.platform.protos.DataType consumes = 4;
  if (this->consumes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      _consumes_cached_byte_size_.load(std::memory_order_relaxed),
        target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->consumes_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.pyrus.platform.protos.SessionDevice)
  return target;
}

size_t SessionDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.pyrus.platform.protos.SessionDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .github.com.pyrus.platform.protos.DataType produces = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->produces_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->produces(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _produces_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .github.com.pyrus.platform.protos.DataType consumes = 4;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->consumes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->consumes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _consumes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // .github.com.pyrus.platform.protos.Device device = 2;
  if (this->has_device()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *device_);
  }

  // bool connected = 1;
  if (this->connected() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SessionDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.pyrus.platform.protos.SessionDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const SessionDevice* source =
      ::google::protobuf::DynamicCastToGenerated<SessionDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.pyrus.platform.protos.SessionDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.pyrus.platform.protos.SessionDevice)
    MergeFrom(*source);
  }
}

void SessionDevice::MergeFrom(const SessionDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.pyrus.platform.protos.SessionDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  produces_.MergeFrom(from.produces_);
  consumes_.MergeFrom(from.consumes_);
  if (from.has_device()) {
    mutable_device()->::github::com::pyrus::platform::protos::Device::MergeFrom(from.device());
  }
  if (from.connected() != 0) {
    set_connected(from.connected());
  }
}

void SessionDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.pyrus.platform.protos.SessionDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SessionDevice::CopyFrom(const SessionDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.pyrus.platform.protos.SessionDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionDevice::IsInitialized() const {
  return true;
}

void SessionDevice::Swap(SessionDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SessionDevice::InternalSwap(SessionDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  produces_.InternalSwap(&other->produces_);
  consumes_.InternalSwap(&other->consumes_);
  swap(device_, other->device_);
  swap(connected_, other->connected_);
}

::google::protobuf::Metadata SessionDevice::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_session_5fservice_2eproto);
  return ::file_level_metadata_session_5fservice_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protos
}  // namespace platform
}  // namespace pyrus
}  // namespace com
}  // namespace github
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::CreateSessionRequest* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::CreateSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::CreateSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::CreateSessionResponse* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::CreateSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::CreateSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::GetSessionRequest* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::GetSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::GetSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::GetSessionResponse* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::GetSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::GetSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::DeleteSessionRequest* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::DeleteSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::DeleteSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::ListSessionsRequest* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::ListSessionsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::ListSessionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::ListSessionsResponse* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::ListSessionsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::ListSessionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::DeleteSessionResponse* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::DeleteSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::DeleteSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::WaitForSessionRequest* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::WaitForSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::WaitForSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::WaitForSessionResponse* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::WaitForSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::WaitForSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::ListWaitingSessionRequest* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::ListWaitingSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::ListWaitingSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::ListWaitingSessionResponse* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::ListWaitingSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::ListWaitingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::JoinSessionRequest* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::JoinSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::JoinSessionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::JoinSessionResponse* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::JoinSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::JoinSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::Session* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::Session >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::Session >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::pyrus::platform::protos::SessionDevice* Arena::CreateMaybeMessage< ::github::com::pyrus::platform::protos::SessionDevice >(Arena* arena) {
  return Arena::CreateInternal< ::github::com::pyrus::platform::protos::SessionDevice >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
